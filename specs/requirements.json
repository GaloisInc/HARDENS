[
  {
    "reqid": "ACTUATION_ACTUATOR_0",
    "rationale": "RFP function 5,6\n",
    "fulltext": "RTS shall always satisfy\n  (Auto_Actuate_0_Actuator_0 | Auto_Actuate_1_Actuator_0 | UI_Manual_Actuate_Actuator_0)\n  = Actuate_Actuator_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Auto_Actuate_0_Actuator_0",
        "Auto_Actuate_1_Actuator_0",
        "UI_Manual_Actuate_Actuator_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( Auto_Actuate_0_Actuator_0 | Auto_Actuate_1_Actuator_0 | UI_Manual_Actuate_Actuator_0 ))",
      "responseTextRange": [
        17,
        112
      ],
      "ft": "(LAST V <b><i>(( Auto_Actuate_0_Actuator_0 | Auto_Actuate_1_Actuator_0 | UI_Manual_Actuate_Actuator_0 ))</i></b>)",
      "pt": "(H <b><i>(( Auto_Actuate_0_Actuator_0 | Auto_Actuate_1_Actuator_0 | UI_Manual_Actuate_Actuator_0 ))</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( Auto_Actuate_0_Actuator_0 | Auto_Actuate_1_Actuator_0 | UI_Manual_Actuate_Actuator_0 ))</i></b>)",
      "ptExpanded": "(H <b><i>(( Auto_Actuate_0_Actuator_0 | Auto_Actuate_1_Actuator_0 | UI_Manual_Actuate_Actuator_0 ))</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( Auto_Actuate_0_Actuator_0 or Auto_Actuate_1_Actuator_0 or UI_Manual_Actuate_Actuator_0 ))))",
      "diagramVariables": "Response = <b><i>(( Auto_Actuate_0_Actuator_0 | Auto_Actuate_1_Actuator_0 | UI_Manual_Actuate_Actuator_0 ))</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "ACTUATION_ACTUATOR_1",
    "rationale": "RFP function 5,6\n",
    "fulltext": "RTS shall always satisfy\n  (Auto_Actuate_0_Actuator_1 | Auto_Actuate_1_Actuator_1 | UI_Manual_Actuate_Actuator_1)\n  = Actuate_Actuator_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Auto_Actuate_0_Actuator_1",
        "Auto_Actuate_1_Actuator_1",
        "UI_Manual_Actuate_Actuator_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( Auto_Actuate_0_Actuator_1 | Auto_Actuate_1_Actuator_1 | UI_Manual_Actuate_Actuator_1 ))",
      "responseTextRange": [
        17,
        112
      ],
      "ft": "(LAST V <b><i>(( Auto_Actuate_0_Actuator_1 | Auto_Actuate_1_Actuator_1 | UI_Manual_Actuate_Actuator_1 ))</i></b>)",
      "pt": "(H <b><i>(( Auto_Actuate_0_Actuator_1 | Auto_Actuate_1_Actuator_1 | UI_Manual_Actuate_Actuator_1 ))</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( Auto_Actuate_0_Actuator_1 | Auto_Actuate_1_Actuator_1 | UI_Manual_Actuate_Actuator_1 ))</i></b>)",
      "ptExpanded": "(H <b><i>(( Auto_Actuate_0_Actuator_1 | Auto_Actuate_1_Actuator_1 | UI_Manual_Actuate_Actuator_1 ))</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( Auto_Actuate_0_Actuator_1 or Auto_Actuate_1_Actuator_1 or UI_Manual_Actuate_Actuator_1 ))))",
      "diagramVariables": "Response = <b><i>(( Auto_Actuate_0_Actuator_1 | Auto_Actuate_1_Actuator_1 | UI_Manual_Actuate_Actuator_1 ))</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "ACTUATION_AUTO_LOGIC_0_ACTUATOR_0",
    "parent_reqid": "ACTUATION_ACTUATOR_0",
    "rationale": "RFP function 4,5, RFP actuation logic architecture\n",
    "fulltext": "RTS shall always satisfy if (Coincidence_0_T | Coincidence_0_P) then Auto_Actuate_0_Actuator_0\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Coincidence_0_T",
        "Coincidence_0_P",
        "Auto_Actuate_0_Actuator_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( Coincidence_0_T | Coincidence_0_P ) => Auto_Actuate_0_Actuator_0)",
      "responseTextRange": [
        17,
        93
      ],
      "ft": "(LAST V <b><i>(( Coincidence_0_T | Coincidence_0_P ) -> Auto_Actuate_0_Actuator_0)</i></b>)",
      "pt": "(H <b><i>(( Coincidence_0_T | Coincidence_0_P ) -> Auto_Actuate_0_Actuator_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( Coincidence_0_T | Coincidence_0_P ) -> Auto_Actuate_0_Actuator_0)</i></b>)",
      "ptExpanded": "(H <b><i>(( Coincidence_0_T | Coincidence_0_P ) -> Auto_Actuate_0_Actuator_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( Coincidence_0_T or Coincidence_0_P ) => Auto_Actuate_0_Actuator_0)))",
      "diagramVariables": "Response = <b><i>(( Coincidence_0_T | Coincidence_0_P ) => Auto_Actuate_0_Actuator_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "ACTUATION_AUTO_LOGIC_0_ACTUATOR_1",
    "parent_reqid": "ACTUATION_ACTUATOR_1",
    "rationale": "RFP function 4,5, RFP actuation logic architecture\n",
    "fulltext": "RTS shall always satisfy if Coincidence_0_S then Auto_Actuate_0_Actuator_1",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Coincidence_0_S",
        "Auto_Actuate_0_Actuator_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(Coincidence_0_S => Auto_Actuate_0_Actuator_1)",
      "responseTextRange": [
        17,
        73
      ],
      "ft": "(LAST V <b><i>(Coincidence_0_S -> Auto_Actuate_0_Actuator_1)</i></b>)",
      "pt": "(H <b><i>(Coincidence_0_S -> Auto_Actuate_0_Actuator_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(Coincidence_0_S -> Auto_Actuate_0_Actuator_1)</i></b>)",
      "ptExpanded": "(H <b><i>(Coincidence_0_S -> Auto_Actuate_0_Actuator_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((Coincidence_0_S => Auto_Actuate_0_Actuator_1)))",
      "diagramVariables": "Response = <b><i>(Coincidence_0_S => Auto_Actuate_0_Actuator_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "COINCIDENCE_LOGIC_0_T",
    "rationale": "RFP function 4",
    "parent_reqid": "ACTUATION_AUTO_LOGIC_0_ACTUATOR_0",
    "fulltext": "RTS shall always satisfy\n ((Trip_T_0 & Trip_T_1)\n | ((Trip_T_0 | Trip_T_1) & (Trip_T_2 | Trip_T_3))\n | (Trip_T_2 & Trip_T_3))\n = Coincidence_0_T\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Trip_T_0",
        "Trip_T_1",
        "Trip_T_2",
        "Trip_T_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))",
      "responseTextRange": [
        17,
        124
      ],
      "ft": "(LAST V <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>)",
      "pt": "(H <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>)",
      "ptExpanded": "(H <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( ( Trip_T_0 and Trip_T_1 ) or ( ( Trip_T_0 or Trip_T_1 ) and ( Trip_T_2 or Trip_T_3 ) ) or ( Trip_T_2 and Trip_T_3 ) ))))",
      "diagramVariables": "Response = <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "COINCIDENCE_LOGIC_0_P",
    "rationale": "RFP function 4",
    "parent_reqid": "ACTUATION_AUTO_LOGIC_0_ACTUATOR_0",
    "fulltext": "RTS shall always satisfy\n ((Trip_P_0 & Trip_P_1)\n | ((Trip_P_0 | Trip_P_1) & (Trip_P_2 | Trip_P_3))\n | (Trip_P_2 & Trip_P_3))\n = Coincidence_0_P\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Trip_P_0",
        "Trip_P_1",
        "Trip_P_2",
        "Trip_P_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))",
      "responseTextRange": [
        17,
        124
      ],
      "ft": "(LAST V <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>)",
      "pt": "(H <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>)",
      "ptExpanded": "(H <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( ( Trip_P_0 and Trip_P_1 ) or ( ( Trip_P_0 or Trip_P_1 ) and ( Trip_P_2 or Trip_P_3 ) ) or ( Trip_P_2 and Trip_P_3 ) ))))",
      "diagramVariables": "Response = <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "COINCIDENCE_LOGIC_0_S",
    "rationale": "RFP function 4",
    "parent_reqid": "ACTUATION_AUTO_LOGIC_0_ACTUATOR_1",
    "fulltext": "RTS shall always satisfy\n ((Trip_S_0 & Trip_S_1)\n | ((Trip_S_0 | Trip_S_1) & (Trip_S_2 | Trip_S_3))\n | (Trip_S_2 & Trip_S_3))\n = Coincidence_0_S\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Trip_S_0",
        "Trip_S_1",
        "Trip_S_2",
        "Trip_S_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))",
      "responseTextRange": [
        17,
        124
      ],
      "ft": "(LAST V <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>)",
      "pt": "(H <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>)",
      "ptExpanded": "(H <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( ( Trip_S_0 and Trip_S_1 ) or ( ( Trip_S_0 or Trip_S_1 ) and ( Trip_S_2 or Trip_S_3 ) ) or ( Trip_S_2 and Trip_S_3 ) ))))",
      "diagramVariables": "Response = <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "ACTUATION_AUTO_LOGIC_1_ACTUATOR_0",
    "parent_reqid": "ACTUATION_ACTUATOR_0",
    "rationale": "RFP function 4,5, RFP actuation logic architecture\n",
    "fulltext": "RTS shall always satisfy if (Coincidence_1_T | Coincidence_1_P) then Auto_Actuate_1_Actuator_0\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Coincidence_1_T",
        "Coincidence_1_P",
        "Auto_Actuate_1_Actuator_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( Coincidence_1_T | Coincidence_1_P ) => Auto_Actuate_1_Actuator_0)",
      "responseTextRange": [
        17,
        93
      ],
      "ft": "(LAST V <b><i>(( Coincidence_1_T | Coincidence_1_P ) -> Auto_Actuate_1_Actuator_0)</i></b>)",
      "pt": "(H <b><i>(( Coincidence_1_T | Coincidence_1_P ) -> Auto_Actuate_1_Actuator_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( Coincidence_1_T | Coincidence_1_P ) -> Auto_Actuate_1_Actuator_0)</i></b>)",
      "ptExpanded": "(H <b><i>(( Coincidence_1_T | Coincidence_1_P ) -> Auto_Actuate_1_Actuator_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( Coincidence_1_T or Coincidence_1_P ) => Auto_Actuate_1_Actuator_0)))",
      "diagramVariables": "Response = <b><i>(( Coincidence_1_T | Coincidence_1_P ) => Auto_Actuate_1_Actuator_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "ACTUATION_AUTO_LOGIC_1_ACTUATOR_1",
    "parent_reqid": "ACTUATION_ACTUATOR_1",
    "rationale": "RFP function 4,5, RFP actuation logic architecture\n",
    "fulltext": "RTS shall always satisfy if Coincidence_1_S then Auto_Actuate_1_Actuator_1",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Coincidence_1_S",
        "Auto_Actuate_1_Actuator_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(Coincidence_1_S => Auto_Actuate_1_Actuator_1)",
      "responseTextRange": [
        17,
        73
      ],
      "ft": "(LAST V <b><i>(Coincidence_1_S -> Auto_Actuate_1_Actuator_1)</i></b>)",
      "pt": "(H <b><i>(Coincidence_1_S -> Auto_Actuate_1_Actuator_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(Coincidence_1_S -> Auto_Actuate_1_Actuator_1)</i></b>)",
      "ptExpanded": "(H <b><i>(Coincidence_1_S -> Auto_Actuate_1_Actuator_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((Coincidence_1_S => Auto_Actuate_1_Actuator_1)))",
      "diagramVariables": "Response = <b><i>(Coincidence_1_S => Auto_Actuate_1_Actuator_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "COINCIDENCE_LOGIC_1_T",
    "rationale": "RFP function 4",
    "parent_reqid": "ACTUATION_AUTO_LOGIC_1_ACTUATOR_0",
    "fulltext": "RTS shall always satisfy\n ((Trip_T_0 & Trip_T_1)\n | ((Trip_T_0 | Trip_T_1) & (Trip_T_2 | Trip_T_3))\n | (Trip_T_2 & Trip_T_3))\n = Coincidence_1_T\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Trip_T_0",
        "Trip_T_1",
        "Trip_T_2",
        "Trip_T_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))",
      "responseTextRange": [
        17,
        124
      ],
      "ft": "(LAST V <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>)",
      "pt": "(H <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>)",
      "ptExpanded": "(H <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( ( Trip_T_0 and Trip_T_1 ) or ( ( Trip_T_0 or Trip_T_1 ) and ( Trip_T_2 or Trip_T_3 ) ) or ( Trip_T_2 and Trip_T_3 ) ))))",
      "diagramVariables": "Response = <b><i>(( ( Trip_T_0 & Trip_T_1 ) | ( ( Trip_T_0 | Trip_T_1 ) & ( Trip_T_2 | Trip_T_3 ) ) | ( Trip_T_2 & Trip_T_3 ) ))</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "COINCIDENCE_LOGIC_1_P",
    "rationale": "RFP function 4",
    "parent_reqid": "ACTUATION_AUTO_LOGIC_1_ACTUATOR_0",
    "fulltext": "RTS shall always satisfy\n ((Trip_P_0 & Trip_P_1)\n | ((Trip_P_0 | Trip_P_1) & (Trip_P_2 | Trip_P_3))\n | (Trip_P_2 & Trip_P_3))\n = Coincidence_1_P\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Trip_P_0",
        "Trip_P_1",
        "Trip_P_2",
        "Trip_P_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))",
      "responseTextRange": [
        17,
        124
      ],
      "ft": "(LAST V <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>)",
      "pt": "(H <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>)",
      "ptExpanded": "(H <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( ( Trip_P_0 and Trip_P_1 ) or ( ( Trip_P_0 or Trip_P_1 ) and ( Trip_P_2 or Trip_P_3 ) ) or ( Trip_P_2 and Trip_P_3 ) ))))",
      "diagramVariables": "Response = <b><i>(( ( Trip_P_0 & Trip_P_1 ) | ( ( Trip_P_0 | Trip_P_1 ) & ( Trip_P_2 | Trip_P_3 ) ) | ( Trip_P_2 & Trip_P_3 ) ))</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "COINCIDENCE_LOGIC_1_S",
    "rationale": "RFP function 4",
    "parent_reqid": "ACTUATION_AUTO_LOGIC_1_ACTUATOR_1",
    "fulltext": "RTS shall always satisfy\n ((Trip_S_0 & Trip_S_1)\n | ((Trip_S_0 | Trip_S_1) & (Trip_S_2 | Trip_S_3))\n | (Trip_S_2 & Trip_S_3))\n = Coincidence_1_S\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Trip_S_0",
        "Trip_S_1",
        "Trip_S_2",
        "Trip_S_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))",
      "responseTextRange": [
        17,
        124
      ],
      "ft": "(LAST V <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>)",
      "pt": "(H <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>)",
      "ftExpanded": "(LAST V <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>)",
      "ptExpanded": "(H <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((( ( Trip_S_0 and Trip_S_1 ) or ( ( Trip_S_0 or Trip_S_1 ) and ( Trip_S_2 or Trip_S_3 ) ) or ( Trip_S_2 and Trip_S_3 ) ))))",
      "diagramVariables": "Response = <b><i>(( ( Trip_S_0 & Trip_S_1 ) | ( ( Trip_S_0 | Trip_S_1 ) & ( Trip_S_2 | Trip_S_3 ) ) | ( Trip_S_2 & Trip_S_3 ) ))</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_T_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_T_0 & (T_0 > Setpoint_T_0))\nRTS shall always satisfy Trip_T_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_T_0",
        "T_0",
        "Setpoint_T_0",
        "Trip_T_0"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))",
      "regular_condition": "(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_T_0)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_T_0)</i></b>)))) & (<b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b> -> (LAST V <b><i>(Trip_T_0)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b>)) | <b><i>(Trip_T_0)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_T_0)</i></b>)))) & (<b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b> -> (LAST V <b><i>(Trip_T_0)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b>)) | <b><i>(Trip_T_0)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_T_0 and ( T_0 > Setpoint_T_0 ) )))) or (Trip_T_0)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b>, Response = <b><i>(Trip_T_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_T_0 & ( T_0 > Setpoint_T_0 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_T_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_T_0_Display = Trip_T_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_T_0_Display",
        "Trip_T_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_T_0_Display = Trip_T_0)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_T_0_Display = Trip_T_0)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_T_0_Display = Trip_T_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_T_0_Display = Trip_T_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_T_0_Display = Trip_T_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_T_0_Display = Trip_T_0)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_T_0_Display = Trip_T_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_P_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_P_0 & (P_0 > Setpoint_P_0))\nRTS shall always satisfy Trip_P_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_P_0",
        "P_0",
        "Setpoint_P_0",
        "Trip_P_0"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))",
      "regular_condition": "(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_P_0)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_P_0)</i></b>)))) & (<b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b> -> (LAST V <b><i>(Trip_P_0)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b>)) | <b><i>(Trip_P_0)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_P_0)</i></b>)))) & (<b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b> -> (LAST V <b><i>(Trip_P_0)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b>)) | <b><i>(Trip_P_0)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_P_0 and ( P_0 > Setpoint_P_0 ) )))) or (Trip_P_0)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b>, Response = <b><i>(Trip_P_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_P_0 & ( P_0 > Setpoint_P_0 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_P_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_P_0_Display = Trip_P_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_P_0_Display",
        "Trip_P_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_P_0_Display = Trip_P_0)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_P_0_Display = Trip_P_0)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_P_0_Display = Trip_P_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_P_0_Display = Trip_P_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_P_0_Display = Trip_P_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_P_0_Display = Trip_P_0)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_P_0_Display = Trip_P_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_S_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_S_0 & (S_0 < Setpoint_S_0))\nRTS shall always satisfy Trip_S_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_S_0",
        "S_0",
        "Setpoint_S_0",
        "Trip_S_0"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))",
      "regular_condition": "(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_S_0)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_S_0)</i></b>)))) & (<b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b> -> (LAST V <b><i>(Trip_S_0)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b>)) | <b><i>(Trip_S_0)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_S_0)</i></b>)))) & (<b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b> -> (LAST V <b><i>(Trip_S_0)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b>)) | <b><i>(Trip_S_0)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_S_0 and ( S_0 < Setpoint_S_0 ) )))) or (Trip_S_0)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b>, Response = <b><i>(Trip_S_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_S_0 & ( S_0 < Setpoint_S_0 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_S_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_S_0_Display = Trip_S_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_S_0_Display",
        "Trip_S_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_S_0_Display = Trip_S_0)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_S_0_Display = Trip_S_0)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_S_0_Display = Trip_S_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_S_0_Display = Trip_S_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_S_0_Display = Trip_S_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_S_0_Display = Trip_S_0)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_S_0_Display = Trip_S_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_T_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_T_1 & (T_1 > Setpoint_T_1))\nRTS shall always satisfy Trip_T_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_T_1",
        "T_1",
        "Setpoint_T_1",
        "Trip_T_1"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))",
      "regular_condition": "(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_T_1)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_T_1)</i></b>)))) & (<b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b> -> (LAST V <b><i>(Trip_T_1)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b>)) | <b><i>(Trip_T_1)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_T_1)</i></b>)))) & (<b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b> -> (LAST V <b><i>(Trip_T_1)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b>)) | <b><i>(Trip_T_1)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_T_1 and ( T_1 > Setpoint_T_1 ) )))) or (Trip_T_1)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b>, Response = <b><i>(Trip_T_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_T_1 & ( T_1 > Setpoint_T_1 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_T_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_T_1_Display = Trip_T_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_T_1_Display",
        "Trip_T_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_T_1_Display = Trip_T_1)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_T_1_Display = Trip_T_1)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_T_1_Display = Trip_T_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_T_1_Display = Trip_T_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_T_1_Display = Trip_T_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_T_1_Display = Trip_T_1)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_T_1_Display = Trip_T_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_P_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_P_1 & (P_1 > Setpoint_P_1))\nRTS shall always satisfy Trip_P_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_P_1",
        "P_1",
        "Setpoint_P_1",
        "Trip_P_1"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))",
      "regular_condition": "(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_P_1)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_P_1)</i></b>)))) & (<b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b> -> (LAST V <b><i>(Trip_P_1)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b>)) | <b><i>(Trip_P_1)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_P_1)</i></b>)))) & (<b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b> -> (LAST V <b><i>(Trip_P_1)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b>)) | <b><i>(Trip_P_1)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_P_1 and ( P_1 > Setpoint_P_1 ) )))) or (Trip_P_1)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b>, Response = <b><i>(Trip_P_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_P_1 & ( P_1 > Setpoint_P_1 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_P_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_P_1_Display = Trip_P_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_P_1_Display",
        "Trip_P_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_P_1_Display = Trip_P_1)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_P_1_Display = Trip_P_1)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_P_1_Display = Trip_P_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_P_1_Display = Trip_P_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_P_1_Display = Trip_P_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_P_1_Display = Trip_P_1)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_P_1_Display = Trip_P_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_S_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_S_1 & (S_1 < Setpoint_S_1))\nRTS shall always satisfy Trip_S_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_S_1",
        "S_1",
        "Setpoint_S_1",
        "Trip_S_1"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))",
      "regular_condition": "(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_S_1)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_S_1)</i></b>)))) & (<b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b> -> (LAST V <b><i>(Trip_S_1)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b>)) | <b><i>(Trip_S_1)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_S_1)</i></b>)))) & (<b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b> -> (LAST V <b><i>(Trip_S_1)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b>)) | <b><i>(Trip_S_1)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_S_1 and ( S_1 < Setpoint_S_1 ) )))) or (Trip_S_1)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b>, Response = <b><i>(Trip_S_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_S_1 & ( S_1 < Setpoint_S_1 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_S_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_S_1_Display = Trip_S_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_S_1_Display",
        "Trip_S_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_S_1_Display = Trip_S_1)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_S_1_Display = Trip_S_1)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_S_1_Display = Trip_S_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_S_1_Display = Trip_S_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_S_1_Display = Trip_S_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_S_1_Display = Trip_S_1)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_S_1_Display = Trip_S_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_T_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_T_2 & (T_2 > Setpoint_T_2))\nRTS shall always satisfy Trip_T_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_T_2",
        "T_2",
        "Setpoint_T_2",
        "Trip_T_2"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))",
      "regular_condition": "(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_T_2)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_T_2)</i></b>)))) & (<b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b> -> (LAST V <b><i>(Trip_T_2)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b>)) | <b><i>(Trip_T_2)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_T_2)</i></b>)))) & (<b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b> -> (LAST V <b><i>(Trip_T_2)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b>)) | <b><i>(Trip_T_2)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_T_2 and ( T_2 > Setpoint_T_2 ) )))) or (Trip_T_2)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b>, Response = <b><i>(Trip_T_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_T_2 & ( T_2 > Setpoint_T_2 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_T_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_T_2_Display = Trip_T_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_T_2_Display",
        "Trip_T_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_T_2_Display = Trip_T_2)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_T_2_Display = Trip_T_2)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_T_2_Display = Trip_T_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_T_2_Display = Trip_T_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_T_2_Display = Trip_T_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_T_2_Display = Trip_T_2)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_T_2_Display = Trip_T_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_P_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_P_2 & (P_2 > Setpoint_P_2))\nRTS shall always satisfy Trip_P_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_P_2",
        "P_2",
        "Setpoint_P_2",
        "Trip_P_2"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))",
      "regular_condition": "(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_P_2)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_P_2)</i></b>)))) & (<b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b> -> (LAST V <b><i>(Trip_P_2)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b>)) | <b><i>(Trip_P_2)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_P_2)</i></b>)))) & (<b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b> -> (LAST V <b><i>(Trip_P_2)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b>)) | <b><i>(Trip_P_2)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_P_2 and ( P_2 > Setpoint_P_2 ) )))) or (Trip_P_2)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b>, Response = <b><i>(Trip_P_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_P_2 & ( P_2 > Setpoint_P_2 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_P_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_P_2_Display = Trip_P_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_P_2_Display",
        "Trip_P_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_P_2_Display = Trip_P_2)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_P_2_Display = Trip_P_2)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_P_2_Display = Trip_P_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_P_2_Display = Trip_P_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_P_2_Display = Trip_P_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_P_2_Display = Trip_P_2)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_P_2_Display = Trip_P_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_S_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_S_2 & (S_2 < Setpoint_S_2))\nRTS shall always satisfy Trip_S_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_S_2",
        "S_2",
        "Setpoint_S_2",
        "Trip_S_2"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))",
      "regular_condition": "(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_S_2)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_S_2)</i></b>)))) & (<b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b> -> (LAST V <b><i>(Trip_S_2)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b>)) | <b><i>(Trip_S_2)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_S_2)</i></b>)))) & (<b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b> -> (LAST V <b><i>(Trip_S_2)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b>)) | <b><i>(Trip_S_2)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_S_2 and ( S_2 < Setpoint_S_2 ) )))) or (Trip_S_2)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b>, Response = <b><i>(Trip_S_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_S_2 & ( S_2 < Setpoint_S_2 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_S_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_S_2_Display = Trip_S_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_S_2_Display",
        "Trip_S_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_S_2_Display = Trip_S_2)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_S_2_Display = Trip_S_2)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_S_2_Display = Trip_S_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_S_2_Display = Trip_S_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_S_2_Display = Trip_S_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_S_2_Display = Trip_S_2)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_S_2_Display = Trip_S_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_T_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_T_3 & (T_3 > Setpoint_T_3))\nRTS shall always satisfy Trip_T_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_T_3",
        "T_3",
        "Setpoint_T_3",
        "Trip_T_3"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))",
      "regular_condition": "(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_T_3)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_T_3)</i></b>)))) & (<b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b> -> (LAST V <b><i>(Trip_T_3)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b>)) | <b><i>(Trip_T_3)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_T_3)</i></b>)))) & (<b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b> -> (LAST V <b><i>(Trip_T_3)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b>)) | <b><i>(Trip_T_3)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_T_3 and ( T_3 > Setpoint_T_3 ) )))) or (Trip_T_3)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b>, Response = <b><i>(Trip_T_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_T_3 & ( T_3 > Setpoint_T_3 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_T_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_T_3_Display = Trip_T_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_T_3_Display",
        "Trip_T_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_T_3_Display = Trip_T_3)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_T_3_Display = Trip_T_3)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_T_3_Display = Trip_T_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_T_3_Display = Trip_T_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_T_3_Display = Trip_T_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_T_3_Display = Trip_T_3)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_T_3_Display = Trip_T_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_P_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_P_3 & (P_3 > Setpoint_P_3))\nRTS shall always satisfy Trip_P_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_P_3",
        "P_3",
        "Setpoint_P_3",
        "Trip_P_3"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))",
      "regular_condition": "(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_P_3)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_P_3)</i></b>)))) & (<b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b> -> (LAST V <b><i>(Trip_P_3)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b>)) | <b><i>(Trip_P_3)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_P_3)</i></b>)))) & (<b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b> -> (LAST V <b><i>(Trip_P_3)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b>)) | <b><i>(Trip_P_3)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_P_3 and ( P_3 > Setpoint_P_3 ) )))) or (Trip_P_3)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b>, Response = <b><i>(Trip_P_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_P_3 & ( P_3 > Setpoint_P_3 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_P_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_P_3_Display = Trip_P_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_P_3_Display",
        "Trip_P_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_P_3_Display = Trip_P_3)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_P_3_Display = Trip_P_3)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_P_3_Display = Trip_P_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_P_3_Display = Trip_P_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_P_3_Display = Trip_P_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_P_3_Display = Trip_P_3)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_P_3_Display = Trip_P_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_S_TRIP",
    "rationale": "RFP function 1,2,3,9\n",
    "fulltext": "When\n  (!Bypass_S_3 & (S_3 < Setpoint_S_3))\nRTS shall always satisfy Trip_S_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "Bypass_S_3",
        "S_3",
        "Setpoint_S_3",
        "Trip_S_3"
      ],
      "qualifier_word": "when",
      "pre_condition": "(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))",
      "regular_condition": "(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))",
      "conditionTextRange": [
        0,
        42
      ],
      "component_name": "RTS",
      "componentTextRange": [
        44,
        46
      ],
      "timingTextRange": [
        54,
        59
      ],
      "post_condition": "(Trip_S_3)",
      "responseTextRange": [
        61,
        76
      ],
      "ft": "((LAST V (((! <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_S_3)</i></b>)))) & (<b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b> -> (LAST V <b><i>(Trip_S_3)</i></b>)))",
      "pt": "(H ((H (! <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b>)) | <b><i>(Trip_S_3)</i></b>))",
      "ftExpanded": "((LAST V (((! <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b>) & ((! LAST) & (X <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b>))) -> (X (LAST V <b><i>(Trip_S_3)</i></b>)))) & (<b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b> -> (LAST V <b><i>(Trip_S_3)</i></b>)))",
      "ptExpanded": "(H ((H (! <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b>)) | <b><i>(Trip_S_3)</i></b>))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (( not Bypass_S_3 and ( S_3 < Setpoint_S_3 ) )))) or (Trip_S_3)))",
      "diagramVariables": "TC = <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b>, Response = <b><i>(Trip_S_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b> is true and any point in the interval where <b><i>(( ! Bypass_S_3 & ( S_3 < Setpoint_S_3 ) ))</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_S_TRIP_UI",
    "rationale": "RFP function 12",
    "fulltext": "RTS shall always satisfy UI_Trip_S_3_Display = Trip_S_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Trip_S_3_Display",
        "Trip_S_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Trip_S_3_Display = Trip_S_3)",
      "responseTextRange": [
        17,
        54
      ],
      "ft": "(LAST V <b><i>(UI_Trip_S_3_Display = Trip_S_3)</i></b>)",
      "pt": "(H <b><i>(UI_Trip_S_3_Display = Trip_S_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Trip_S_3_Display = Trip_S_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Trip_S_3_Display = Trip_S_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Trip_S_3_Display = Trip_S_3)))",
      "diagramVariables": "Response = <b><i>(UI_Trip_S_3_Display = Trip_S_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_BYPASS_T_Display",
    "rationale": "RFP function 13",
    "fulltext": "RTS shall always satisfy UI_Bypass_T_0_Display = Bypass_T_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Bypass_T_0_Display",
        "Bypass_T_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Bypass_T_0_Display = Bypass_T_0)",
      "responseTextRange": [
        17,
        58
      ],
      "ft": "(LAST V <b><i>(UI_Bypass_T_0_Display = Bypass_T_0)</i></b>)",
      "pt": "(H <b><i>(UI_Bypass_T_0_Display = Bypass_T_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Bypass_T_0_Display = Bypass_T_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Bypass_T_0_Display = Bypass_T_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Bypass_T_0_Display = Bypass_T_0)))",
      "diagramVariables": "Response = <b><i>(UI_Bypass_T_0_Display = Bypass_T_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement sets the system value from the UI)\n",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_0\n  then (UI_Bypass_T_0) = Bypass_T_0)\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "UI_Bypass_T_0",
        "Bypass_T_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_0 => ( UI_Bypass_T_0 ) = Bypass_T_0)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_0 -> ( UI_Bypass_T_0 ) = Bypass_T_0)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_0 -> ( UI_Bypass_T_0 ) = Bypass_T_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_0 -> ( UI_Bypass_T_0 ) = Bypass_T_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_0 -> ( UI_Bypass_T_0 ) = Bypass_T_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_0 => ( UI_Bypass_T_0 ) = Bypass_T_0)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_0 => ( UI_Bypass_T_0 ) = Bypass_T_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_0_NO_BYPASS_T",
    "parent_reqid": "INSTRUMENTATION_0_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn on during normal operation)\n",
    "fulltext": "When !UI_Maintenance_0 & !Bypass_T_0 RTS shall, until UI_Maintenance_0 & UI_Bypass_T_0, satisfy\n  !Bypass_T_0\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "Bypass_T_0",
        "UI_Bypass_T_0"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_0 & ! Bypass_T_0)",
      "regular_condition": "(! UI_Maintenance_0 & ! Bypass_T_0)",
      "conditionTextRange": [
        0,
        35
      ],
      "component_name": "RTS",
      "componentTextRange": [
        37,
        39
      ],
      "stop_condition": "(UI_Maintenance_0 & UI_Bypass_T_0)",
      "timingTextRange": [
        46,
        86
      ],
      "post_condition": "(! Bypass_T_0)",
      "responseTextRange": [
        88,
        108
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>))) -> (X ((<b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b> V (<b><i>(! Bypass_T_0)</i></b> | <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>)) | (LAST V <b><i>(! Bypass_T_0)</i></b>))))) & (<b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b> -> ((<b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b> V (<b><i>(! Bypass_T_0)</i></b> | <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>)) | (LAST V <b><i>(! Bypass_T_0)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>)) | (((! <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>) S ((! <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>) & (<b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b> & ((Y (! <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>)) | FTP)))) -> <b><i>(! Bypass_T_0)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>))) -> (X ((<b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b> V (<b><i>(! Bypass_T_0)</i></b> | <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>)) | (LAST V <b><i>(! Bypass_T_0)</i></b>))))) & (<b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b> -> ((<b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b> V (<b><i>(! Bypass_T_0)</i></b> | <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>)) | (LAST V <b><i>(! Bypass_T_0)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>)) | (((! <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>) S ((! <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>) & (<b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b> & ((Y (! <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(! Bypass_T_0)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_0 and not Bypass_T_0))) or ((SI( ((not UI_Maintenance_0 and not Bypass_T_0) and ((pre ( not (not UI_Maintenance_0 and not Bypass_T_0))) or FTP)), ( not (UI_Maintenance_0 and UI_Bypass_T_0)) )) => (not Bypass_T_0))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b>, SC = <b><i>(UI_Maintenance_0 & UI_Bypass_T_0)</i></b>, Response = <b><i>(! Bypass_T_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_0 & ! Bypass_T_0)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_0_BYPASS_T",
    "parent_reqid": "INSTRUMENTATION_0_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn off during normal operation)\n",
    "fulltext": "When !UI_Maintenance_0 & Bypass_T_0 RTS shall, until UI_Maintenance_0 & !UI_Bypass_T_0, satisfy\n  Bypass_T_0\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "Bypass_T_0",
        "UI_Bypass_T_0"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_0 & Bypass_T_0)",
      "regular_condition": "(! UI_Maintenance_0 & Bypass_T_0)",
      "conditionTextRange": [
        0,
        34
      ],
      "component_name": "RTS",
      "componentTextRange": [
        36,
        38
      ],
      "stop_condition": "(UI_Maintenance_0 & ! UI_Bypass_T_0)",
      "timingTextRange": [
        45,
        86
      ],
      "post_condition": "(Bypass_T_0)",
      "responseTextRange": [
        88,
        107
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>))) -> (X ((<b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b> V (<b><i>(Bypass_T_0)</i></b> | <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>)) | (LAST V <b><i>(Bypass_T_0)</i></b>))))) & (<b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b> -> ((<b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b> V (<b><i>(Bypass_T_0)</i></b> | <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>)) | (LAST V <b><i>(Bypass_T_0)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>)) | (((! <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>) S ((! <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>) & (<b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b> & ((Y (! <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>)) | FTP)))) -> <b><i>(Bypass_T_0)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>))) -> (X ((<b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b> V (<b><i>(Bypass_T_0)</i></b> | <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>)) | (LAST V <b><i>(Bypass_T_0)</i></b>))))) & (<b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b> -> ((<b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b> V (<b><i>(Bypass_T_0)</i></b> | <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>)) | (LAST V <b><i>(Bypass_T_0)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>)) | (((! <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>) S ((! <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>) & (<b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b> & ((Y (! <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(Bypass_T_0)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_0 and Bypass_T_0))) or ((SI( ((not UI_Maintenance_0 and Bypass_T_0) and ((pre ( not (not UI_Maintenance_0 and Bypass_T_0))) or FTP)), ( not (UI_Maintenance_0 and not UI_Bypass_T_0)) )) => (Bypass_T_0))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b>, SC = <b><i>(UI_Maintenance_0 & ! UI_Bypass_T_0)</i></b>, Response = <b><i>(Bypass_T_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_0 & Bypass_T_0)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_BYPASS_P_Display",
    "rationale": "RFP function 13",
    "fulltext": "RTS shall always satisfy UI_Bypass_P_0_Display = Bypass_P_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Bypass_P_0_Display",
        "Bypass_P_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Bypass_P_0_Display = Bypass_P_0)",
      "responseTextRange": [
        17,
        58
      ],
      "ft": "(LAST V <b><i>(UI_Bypass_P_0_Display = Bypass_P_0)</i></b>)",
      "pt": "(H <b><i>(UI_Bypass_P_0_Display = Bypass_P_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Bypass_P_0_Display = Bypass_P_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Bypass_P_0_Display = Bypass_P_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Bypass_P_0_Display = Bypass_P_0)))",
      "diagramVariables": "Response = <b><i>(UI_Bypass_P_0_Display = Bypass_P_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement sets the system value from the UI)\n",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_0\n  then (UI_Bypass_P_0) = Bypass_P_0)\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "UI_Bypass_P_0",
        "Bypass_P_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_0 => ( UI_Bypass_P_0 ) = Bypass_P_0)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_0 -> ( UI_Bypass_P_0 ) = Bypass_P_0)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_0 -> ( UI_Bypass_P_0 ) = Bypass_P_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_0 -> ( UI_Bypass_P_0 ) = Bypass_P_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_0 -> ( UI_Bypass_P_0 ) = Bypass_P_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_0 => ( UI_Bypass_P_0 ) = Bypass_P_0)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_0 => ( UI_Bypass_P_0 ) = Bypass_P_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_0_NO_BYPASS_P",
    "parent_reqid": "INSTRUMENTATION_0_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn on during normal operation)\n",
    "fulltext": "When !UI_Maintenance_0 & !Bypass_P_0 RTS shall, until UI_Maintenance_0 & UI_Bypass_P_0, satisfy\n  !Bypass_P_0\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "Bypass_P_0",
        "UI_Bypass_P_0"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_0 & ! Bypass_P_0)",
      "regular_condition": "(! UI_Maintenance_0 & ! Bypass_P_0)",
      "conditionTextRange": [
        0,
        35
      ],
      "component_name": "RTS",
      "componentTextRange": [
        37,
        39
      ],
      "stop_condition": "(UI_Maintenance_0 & UI_Bypass_P_0)",
      "timingTextRange": [
        46,
        86
      ],
      "post_condition": "(! Bypass_P_0)",
      "responseTextRange": [
        88,
        108
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>))) -> (X ((<b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b> V (<b><i>(! Bypass_P_0)</i></b> | <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>)) | (LAST V <b><i>(! Bypass_P_0)</i></b>))))) & (<b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b> -> ((<b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b> V (<b><i>(! Bypass_P_0)</i></b> | <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>)) | (LAST V <b><i>(! Bypass_P_0)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>)) | (((! <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>) S ((! <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>) & (<b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b> & ((Y (! <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>)) | FTP)))) -> <b><i>(! Bypass_P_0)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>))) -> (X ((<b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b> V (<b><i>(! Bypass_P_0)</i></b> | <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>)) | (LAST V <b><i>(! Bypass_P_0)</i></b>))))) & (<b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b> -> ((<b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b> V (<b><i>(! Bypass_P_0)</i></b> | <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>)) | (LAST V <b><i>(! Bypass_P_0)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>)) | (((! <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>) S ((! <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>) & (<b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b> & ((Y (! <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(! Bypass_P_0)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_0 and not Bypass_P_0))) or ((SI( ((not UI_Maintenance_0 and not Bypass_P_0) and ((pre ( not (not UI_Maintenance_0 and not Bypass_P_0))) or FTP)), ( not (UI_Maintenance_0 and UI_Bypass_P_0)) )) => (not Bypass_P_0))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b>, SC = <b><i>(UI_Maintenance_0 & UI_Bypass_P_0)</i></b>, Response = <b><i>(! Bypass_P_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_0 & ! Bypass_P_0)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_0_BYPASS_P",
    "parent_reqid": "INSTRUMENTATION_0_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn off during normal operation)\n",
    "fulltext": "When !UI_Maintenance_0 & Bypass_P_0 RTS shall, until UI_Maintenance_0 & !UI_Bypass_P_0, satisfy\n  Bypass_P_0\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "Bypass_P_0",
        "UI_Bypass_P_0"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_0 & Bypass_P_0)",
      "regular_condition": "(! UI_Maintenance_0 & Bypass_P_0)",
      "conditionTextRange": [
        0,
        34
      ],
      "component_name": "RTS",
      "componentTextRange": [
        36,
        38
      ],
      "stop_condition": "(UI_Maintenance_0 & ! UI_Bypass_P_0)",
      "timingTextRange": [
        45,
        86
      ],
      "post_condition": "(Bypass_P_0)",
      "responseTextRange": [
        88,
        107
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>))) -> (X ((<b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b> V (<b><i>(Bypass_P_0)</i></b> | <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>)) | (LAST V <b><i>(Bypass_P_0)</i></b>))))) & (<b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b> -> ((<b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b> V (<b><i>(Bypass_P_0)</i></b> | <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>)) | (LAST V <b><i>(Bypass_P_0)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>)) | (((! <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>) S ((! <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>) & (<b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b> & ((Y (! <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>)) | FTP)))) -> <b><i>(Bypass_P_0)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>))) -> (X ((<b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b> V (<b><i>(Bypass_P_0)</i></b> | <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>)) | (LAST V <b><i>(Bypass_P_0)</i></b>))))) & (<b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b> -> ((<b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b> V (<b><i>(Bypass_P_0)</i></b> | <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>)) | (LAST V <b><i>(Bypass_P_0)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>)) | (((! <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>) S ((! <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>) & (<b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b> & ((Y (! <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(Bypass_P_0)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_0 and Bypass_P_0))) or ((SI( ((not UI_Maintenance_0 and Bypass_P_0) and ((pre ( not (not UI_Maintenance_0 and Bypass_P_0))) or FTP)), ( not (UI_Maintenance_0 and not UI_Bypass_P_0)) )) => (Bypass_P_0))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b>, SC = <b><i>(UI_Maintenance_0 & ! UI_Bypass_P_0)</i></b>, Response = <b><i>(Bypass_P_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_0 & Bypass_P_0)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_T_0",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy T_0 = UI_T_0_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "T_0",
        "UI_T_0_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(T_0 = UI_T_0_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(T_0 = UI_T_0_Display)</i></b>)",
      "pt": "(H <b><i>(T_0 = UI_T_0_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(T_0 = UI_T_0_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(T_0 = UI_T_0_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((T_0 = UI_T_0_Display)))",
      "diagramVariables": "Response = <b><i>(T_0 = UI_T_0_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_SETPOINT_T",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_0 then Setpoint_T_0 = UI_Setpoint_T_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "Setpoint_T_0",
        "UI_Setpoint_T_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_0 => Setpoint_T_0 = UI_Setpoint_T_0)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_0 -> Setpoint_T_0 = UI_Setpoint_T_0)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_0 -> Setpoint_T_0 = UI_Setpoint_T_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_0 -> Setpoint_T_0 = UI_Setpoint_T_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_0 -> Setpoint_T_0 = UI_Setpoint_T_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_0 => Setpoint_T_0 = UI_Setpoint_T_0)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_0 => Setpoint_T_0 = UI_Setpoint_T_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_MANUAL_TRIP_T",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_0 & UI_Manual_Trip_T_0 then Trip_T_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "UI_Manual_Trip_T_0",
        "Trip_T_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_0 & UI_Manual_Trip_T_0 => Trip_T_0)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_0 & UI_Manual_Trip_T_0 -> Trip_T_0)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_0 & UI_Manual_Trip_T_0 -> Trip_T_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_0 & UI_Manual_Trip_T_0 -> Trip_T_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_0 & UI_Manual_Trip_T_0 -> Trip_T_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_0 and UI_Manual_Trip_T_0 => Trip_T_0)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_0 & UI_Manual_Trip_T_0 => Trip_T_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_P_0",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy P_0 = UI_P_0_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "P_0",
        "UI_P_0_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(P_0 = UI_P_0_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(P_0 = UI_P_0_Display)</i></b>)",
      "pt": "(H <b><i>(P_0 = UI_P_0_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(P_0 = UI_P_0_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(P_0 = UI_P_0_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((P_0 = UI_P_0_Display)))",
      "diagramVariables": "Response = <b><i>(P_0 = UI_P_0_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_SETPOINT_P",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_0 then Setpoint_P_0 = UI_Setpoint_P_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "Setpoint_P_0",
        "UI_Setpoint_P_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_0 => Setpoint_P_0 = UI_Setpoint_P_0)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_0 -> Setpoint_P_0 = UI_Setpoint_P_0)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_0 -> Setpoint_P_0 = UI_Setpoint_P_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_0 -> Setpoint_P_0 = UI_Setpoint_P_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_0 -> Setpoint_P_0 = UI_Setpoint_P_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_0 => Setpoint_P_0 = UI_Setpoint_P_0)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_0 => Setpoint_P_0 = UI_Setpoint_P_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_MANUAL_TRIP_P",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_0 & UI_Manual_Trip_P_0 then Trip_P_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "UI_Manual_Trip_P_0",
        "Trip_P_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_0 & UI_Manual_Trip_P_0 => Trip_P_0)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_0 & UI_Manual_Trip_P_0 -> Trip_P_0)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_0 & UI_Manual_Trip_P_0 -> Trip_P_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_0 & UI_Manual_Trip_P_0 -> Trip_P_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_0 & UI_Manual_Trip_P_0 -> Trip_P_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_0 and UI_Manual_Trip_P_0 => Trip_P_0)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_0 & UI_Manual_Trip_P_0 => Trip_P_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_S_0",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy S_0 = UI_S_0_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "S_0",
        "UI_S_0_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(S_0 = UI_S_0_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(S_0 = UI_S_0_Display)</i></b>)",
      "pt": "(H <b><i>(S_0 = UI_S_0_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(S_0 = UI_S_0_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(S_0 = UI_S_0_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((S_0 = UI_S_0_Display)))",
      "diagramVariables": "Response = <b><i>(S_0 = UI_S_0_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_SETPOINT_S",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_0 then Setpoint_S_0 = UI_Setpoint_S_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "Setpoint_S_0",
        "UI_Setpoint_S_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_0 => Setpoint_S_0 = UI_Setpoint_S_0)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_0 -> Setpoint_S_0 = UI_Setpoint_S_0)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_0 -> Setpoint_S_0 = UI_Setpoint_S_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_0 -> Setpoint_S_0 = UI_Setpoint_S_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_0 -> Setpoint_S_0 = UI_Setpoint_S_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_0 => Setpoint_S_0 = UI_Setpoint_S_0)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_0 => Setpoint_S_0 = UI_Setpoint_S_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_0_MANUAL_TRIP_S",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_0 & UI_Manual_Trip_S_0 then Trip_S_0\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_0",
        "UI_Manual_Trip_S_0",
        "Trip_S_0"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_0 & UI_Manual_Trip_S_0 => Trip_S_0)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_0 & UI_Manual_Trip_S_0 -> Trip_S_0)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_0 & UI_Manual_Trip_S_0 -> Trip_S_0)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_0 & UI_Manual_Trip_S_0 -> Trip_S_0)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_0 & UI_Manual_Trip_S_0 -> Trip_S_0)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_0 and UI_Manual_Trip_S_0 => Trip_S_0)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_0 & UI_Manual_Trip_S_0 => Trip_S_0)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_BYPASS_T_Display",
    "rationale": "RFP function 13",
    "fulltext": "RTS shall always satisfy UI_Bypass_T_1_Display = Bypass_T_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Bypass_T_1_Display",
        "Bypass_T_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Bypass_T_1_Display = Bypass_T_1)",
      "responseTextRange": [
        17,
        58
      ],
      "ft": "(LAST V <b><i>(UI_Bypass_T_1_Display = Bypass_T_1)</i></b>)",
      "pt": "(H <b><i>(UI_Bypass_T_1_Display = Bypass_T_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Bypass_T_1_Display = Bypass_T_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Bypass_T_1_Display = Bypass_T_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Bypass_T_1_Display = Bypass_T_1)))",
      "diagramVariables": "Response = <b><i>(UI_Bypass_T_1_Display = Bypass_T_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement sets the system value from the UI)\n",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_1\n  then (UI_Bypass_T_1) = Bypass_T_1)\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "UI_Bypass_T_1",
        "Bypass_T_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_1 => ( UI_Bypass_T_1 ) = Bypass_T_1)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_1 -> ( UI_Bypass_T_1 ) = Bypass_T_1)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_1 -> ( UI_Bypass_T_1 ) = Bypass_T_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_1 -> ( UI_Bypass_T_1 ) = Bypass_T_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_1 -> ( UI_Bypass_T_1 ) = Bypass_T_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_1 => ( UI_Bypass_T_1 ) = Bypass_T_1)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_1 => ( UI_Bypass_T_1 ) = Bypass_T_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_1_NO_BYPASS_T",
    "parent_reqid": "INSTRUMENTATION_1_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn on during normal operation)\n",
    "fulltext": "When !UI_Maintenance_1 & !Bypass_T_1 RTS shall, until UI_Maintenance_1 & UI_Bypass_T_1, satisfy\n  !Bypass_T_1\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "Bypass_T_1",
        "UI_Bypass_T_1"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_1 & ! Bypass_T_1)",
      "regular_condition": "(! UI_Maintenance_1 & ! Bypass_T_1)",
      "conditionTextRange": [
        0,
        35
      ],
      "component_name": "RTS",
      "componentTextRange": [
        37,
        39
      ],
      "stop_condition": "(UI_Maintenance_1 & UI_Bypass_T_1)",
      "timingTextRange": [
        46,
        86
      ],
      "post_condition": "(! Bypass_T_1)",
      "responseTextRange": [
        88,
        108
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>))) -> (X ((<b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b> V (<b><i>(! Bypass_T_1)</i></b> | <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>)) | (LAST V <b><i>(! Bypass_T_1)</i></b>))))) & (<b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b> -> ((<b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b> V (<b><i>(! Bypass_T_1)</i></b> | <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>)) | (LAST V <b><i>(! Bypass_T_1)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>)) | (((! <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>) S ((! <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>) & (<b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b> & ((Y (! <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>)) | FTP)))) -> <b><i>(! Bypass_T_1)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>))) -> (X ((<b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b> V (<b><i>(! Bypass_T_1)</i></b> | <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>)) | (LAST V <b><i>(! Bypass_T_1)</i></b>))))) & (<b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b> -> ((<b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b> V (<b><i>(! Bypass_T_1)</i></b> | <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>)) | (LAST V <b><i>(! Bypass_T_1)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>)) | (((! <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>) S ((! <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>) & (<b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b> & ((Y (! <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(! Bypass_T_1)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_1 and not Bypass_T_1))) or ((SI( ((not UI_Maintenance_1 and not Bypass_T_1) and ((pre ( not (not UI_Maintenance_1 and not Bypass_T_1))) or FTP)), ( not (UI_Maintenance_1 and UI_Bypass_T_1)) )) => (not Bypass_T_1))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b>, SC = <b><i>(UI_Maintenance_1 & UI_Bypass_T_1)</i></b>, Response = <b><i>(! Bypass_T_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_1 & ! Bypass_T_1)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_1_BYPASS_T",
    "parent_reqid": "INSTRUMENTATION_1_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn off during normal operation)\n",
    "fulltext": "When !UI_Maintenance_1 & Bypass_T_1 RTS shall, until UI_Maintenance_1 & !UI_Bypass_T_1, satisfy\n  Bypass_T_1\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "Bypass_T_1",
        "UI_Bypass_T_1"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_1 & Bypass_T_1)",
      "regular_condition": "(! UI_Maintenance_1 & Bypass_T_1)",
      "conditionTextRange": [
        0,
        34
      ],
      "component_name": "RTS",
      "componentTextRange": [
        36,
        38
      ],
      "stop_condition": "(UI_Maintenance_1 & ! UI_Bypass_T_1)",
      "timingTextRange": [
        45,
        86
      ],
      "post_condition": "(Bypass_T_1)",
      "responseTextRange": [
        88,
        107
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>))) -> (X ((<b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b> V (<b><i>(Bypass_T_1)</i></b> | <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>)) | (LAST V <b><i>(Bypass_T_1)</i></b>))))) & (<b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b> -> ((<b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b> V (<b><i>(Bypass_T_1)</i></b> | <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>)) | (LAST V <b><i>(Bypass_T_1)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>)) | (((! <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>) S ((! <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>) & (<b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b> & ((Y (! <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>)) | FTP)))) -> <b><i>(Bypass_T_1)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>))) -> (X ((<b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b> V (<b><i>(Bypass_T_1)</i></b> | <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>)) | (LAST V <b><i>(Bypass_T_1)</i></b>))))) & (<b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b> -> ((<b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b> V (<b><i>(Bypass_T_1)</i></b> | <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>)) | (LAST V <b><i>(Bypass_T_1)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>)) | (((! <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>) S ((! <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>) & (<b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b> & ((Y (! <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(Bypass_T_1)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_1 and Bypass_T_1))) or ((SI( ((not UI_Maintenance_1 and Bypass_T_1) and ((pre ( not (not UI_Maintenance_1 and Bypass_T_1))) or FTP)), ( not (UI_Maintenance_1 and not UI_Bypass_T_1)) )) => (Bypass_T_1))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b>, SC = <b><i>(UI_Maintenance_1 & ! UI_Bypass_T_1)</i></b>, Response = <b><i>(Bypass_T_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_1 & Bypass_T_1)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_BYPASS_P_Display",
    "rationale": "RFP function 13",
    "fulltext": "RTS shall always satisfy UI_Bypass_P_1_Display = Bypass_P_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Bypass_P_1_Display",
        "Bypass_P_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Bypass_P_1_Display = Bypass_P_1)",
      "responseTextRange": [
        17,
        58
      ],
      "ft": "(LAST V <b><i>(UI_Bypass_P_1_Display = Bypass_P_1)</i></b>)",
      "pt": "(H <b><i>(UI_Bypass_P_1_Display = Bypass_P_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Bypass_P_1_Display = Bypass_P_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Bypass_P_1_Display = Bypass_P_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Bypass_P_1_Display = Bypass_P_1)))",
      "diagramVariables": "Response = <b><i>(UI_Bypass_P_1_Display = Bypass_P_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement sets the system value from the UI)\n",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_1\n  then (UI_Bypass_P_1) = Bypass_P_1)\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "UI_Bypass_P_1",
        "Bypass_P_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_1 => ( UI_Bypass_P_1 ) = Bypass_P_1)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_1 -> ( UI_Bypass_P_1 ) = Bypass_P_1)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_1 -> ( UI_Bypass_P_1 ) = Bypass_P_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_1 -> ( UI_Bypass_P_1 ) = Bypass_P_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_1 -> ( UI_Bypass_P_1 ) = Bypass_P_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_1 => ( UI_Bypass_P_1 ) = Bypass_P_1)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_1 => ( UI_Bypass_P_1 ) = Bypass_P_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_1_NO_BYPASS_P",
    "parent_reqid": "INSTRUMENTATION_1_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn on during normal operation)\n",
    "fulltext": "When !UI_Maintenance_1 & !Bypass_P_1 RTS shall, until UI_Maintenance_1 & UI_Bypass_P_1, satisfy\n  !Bypass_P_1\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "Bypass_P_1",
        "UI_Bypass_P_1"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_1 & ! Bypass_P_1)",
      "regular_condition": "(! UI_Maintenance_1 & ! Bypass_P_1)",
      "conditionTextRange": [
        0,
        35
      ],
      "component_name": "RTS",
      "componentTextRange": [
        37,
        39
      ],
      "stop_condition": "(UI_Maintenance_1 & UI_Bypass_P_1)",
      "timingTextRange": [
        46,
        86
      ],
      "post_condition": "(! Bypass_P_1)",
      "responseTextRange": [
        88,
        108
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>))) -> (X ((<b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b> V (<b><i>(! Bypass_P_1)</i></b> | <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>)) | (LAST V <b><i>(! Bypass_P_1)</i></b>))))) & (<b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b> -> ((<b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b> V (<b><i>(! Bypass_P_1)</i></b> | <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>)) | (LAST V <b><i>(! Bypass_P_1)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>)) | (((! <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>) S ((! <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>) & (<b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b> & ((Y (! <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>)) | FTP)))) -> <b><i>(! Bypass_P_1)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>))) -> (X ((<b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b> V (<b><i>(! Bypass_P_1)</i></b> | <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>)) | (LAST V <b><i>(! Bypass_P_1)</i></b>))))) & (<b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b> -> ((<b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b> V (<b><i>(! Bypass_P_1)</i></b> | <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>)) | (LAST V <b><i>(! Bypass_P_1)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>)) | (((! <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>) S ((! <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>) & (<b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b> & ((Y (! <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(! Bypass_P_1)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_1 and not Bypass_P_1))) or ((SI( ((not UI_Maintenance_1 and not Bypass_P_1) and ((pre ( not (not UI_Maintenance_1 and not Bypass_P_1))) or FTP)), ( not (UI_Maintenance_1 and UI_Bypass_P_1)) )) => (not Bypass_P_1))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b>, SC = <b><i>(UI_Maintenance_1 & UI_Bypass_P_1)</i></b>, Response = <b><i>(! Bypass_P_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_1 & ! Bypass_P_1)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_1_BYPASS_P",
    "parent_reqid": "INSTRUMENTATION_1_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn off during normal operation)\n",
    "fulltext": "When !UI_Maintenance_1 & Bypass_P_1 RTS shall, until UI_Maintenance_1 & !UI_Bypass_P_1, satisfy\n  Bypass_P_1\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "Bypass_P_1",
        "UI_Bypass_P_1"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_1 & Bypass_P_1)",
      "regular_condition": "(! UI_Maintenance_1 & Bypass_P_1)",
      "conditionTextRange": [
        0,
        34
      ],
      "component_name": "RTS",
      "componentTextRange": [
        36,
        38
      ],
      "stop_condition": "(UI_Maintenance_1 & ! UI_Bypass_P_1)",
      "timingTextRange": [
        45,
        86
      ],
      "post_condition": "(Bypass_P_1)",
      "responseTextRange": [
        88,
        107
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>))) -> (X ((<b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b> V (<b><i>(Bypass_P_1)</i></b> | <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>)) | (LAST V <b><i>(Bypass_P_1)</i></b>))))) & (<b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b> -> ((<b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b> V (<b><i>(Bypass_P_1)</i></b> | <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>)) | (LAST V <b><i>(Bypass_P_1)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>)) | (((! <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>) S ((! <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>) & (<b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b> & ((Y (! <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>)) | FTP)))) -> <b><i>(Bypass_P_1)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>))) -> (X ((<b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b> V (<b><i>(Bypass_P_1)</i></b> | <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>)) | (LAST V <b><i>(Bypass_P_1)</i></b>))))) & (<b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b> -> ((<b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b> V (<b><i>(Bypass_P_1)</i></b> | <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>)) | (LAST V <b><i>(Bypass_P_1)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>)) | (((! <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>) S ((! <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>) & (<b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b> & ((Y (! <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(Bypass_P_1)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_1 and Bypass_P_1))) or ((SI( ((not UI_Maintenance_1 and Bypass_P_1) and ((pre ( not (not UI_Maintenance_1 and Bypass_P_1))) or FTP)), ( not (UI_Maintenance_1 and not UI_Bypass_P_1)) )) => (Bypass_P_1))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b>, SC = <b><i>(UI_Maintenance_1 & ! UI_Bypass_P_1)</i></b>, Response = <b><i>(Bypass_P_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_1 & Bypass_P_1)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_T_1",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy T_1 = UI_T_1_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "T_1",
        "UI_T_1_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(T_1 = UI_T_1_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(T_1 = UI_T_1_Display)</i></b>)",
      "pt": "(H <b><i>(T_1 = UI_T_1_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(T_1 = UI_T_1_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(T_1 = UI_T_1_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((T_1 = UI_T_1_Display)))",
      "diagramVariables": "Response = <b><i>(T_1 = UI_T_1_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_SETPOINT_T",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_1 then Setpoint_T_1 = UI_Setpoint_T_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "Setpoint_T_1",
        "UI_Setpoint_T_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_1 => Setpoint_T_1 = UI_Setpoint_T_1)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_1 -> Setpoint_T_1 = UI_Setpoint_T_1)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_1 -> Setpoint_T_1 = UI_Setpoint_T_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_1 -> Setpoint_T_1 = UI_Setpoint_T_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_1 -> Setpoint_T_1 = UI_Setpoint_T_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_1 => Setpoint_T_1 = UI_Setpoint_T_1)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_1 => Setpoint_T_1 = UI_Setpoint_T_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_MANUAL_TRIP_T",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_1 & UI_Manual_Trip_T_1 then Trip_T_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "UI_Manual_Trip_T_1",
        "Trip_T_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_1 & UI_Manual_Trip_T_1 => Trip_T_1)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_1 & UI_Manual_Trip_T_1 -> Trip_T_1)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_1 & UI_Manual_Trip_T_1 -> Trip_T_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_1 & UI_Manual_Trip_T_1 -> Trip_T_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_1 & UI_Manual_Trip_T_1 -> Trip_T_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_1 and UI_Manual_Trip_T_1 => Trip_T_1)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_1 & UI_Manual_Trip_T_1 => Trip_T_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_P_1",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy P_1 = UI_P_1_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "P_1",
        "UI_P_1_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(P_1 = UI_P_1_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(P_1 = UI_P_1_Display)</i></b>)",
      "pt": "(H <b><i>(P_1 = UI_P_1_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(P_1 = UI_P_1_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(P_1 = UI_P_1_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((P_1 = UI_P_1_Display)))",
      "diagramVariables": "Response = <b><i>(P_1 = UI_P_1_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_SETPOINT_P",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_1 then Setpoint_P_1 = UI_Setpoint_P_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "Setpoint_P_1",
        "UI_Setpoint_P_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_1 => Setpoint_P_1 = UI_Setpoint_P_1)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_1 -> Setpoint_P_1 = UI_Setpoint_P_1)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_1 -> Setpoint_P_1 = UI_Setpoint_P_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_1 -> Setpoint_P_1 = UI_Setpoint_P_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_1 -> Setpoint_P_1 = UI_Setpoint_P_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_1 => Setpoint_P_1 = UI_Setpoint_P_1)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_1 => Setpoint_P_1 = UI_Setpoint_P_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_MANUAL_TRIP_P",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_1 & UI_Manual_Trip_P_1 then Trip_P_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "UI_Manual_Trip_P_1",
        "Trip_P_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_1 & UI_Manual_Trip_P_1 => Trip_P_1)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_1 & UI_Manual_Trip_P_1 -> Trip_P_1)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_1 & UI_Manual_Trip_P_1 -> Trip_P_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_1 & UI_Manual_Trip_P_1 -> Trip_P_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_1 & UI_Manual_Trip_P_1 -> Trip_P_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_1 and UI_Manual_Trip_P_1 => Trip_P_1)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_1 & UI_Manual_Trip_P_1 => Trip_P_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_S_1",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy S_1 = UI_S_1_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "S_1",
        "UI_S_1_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(S_1 = UI_S_1_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(S_1 = UI_S_1_Display)</i></b>)",
      "pt": "(H <b><i>(S_1 = UI_S_1_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(S_1 = UI_S_1_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(S_1 = UI_S_1_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((S_1 = UI_S_1_Display)))",
      "diagramVariables": "Response = <b><i>(S_1 = UI_S_1_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_SETPOINT_S",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_1 then Setpoint_S_1 = UI_Setpoint_S_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "Setpoint_S_1",
        "UI_Setpoint_S_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_1 => Setpoint_S_1 = UI_Setpoint_S_1)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_1 -> Setpoint_S_1 = UI_Setpoint_S_1)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_1 -> Setpoint_S_1 = UI_Setpoint_S_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_1 -> Setpoint_S_1 = UI_Setpoint_S_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_1 -> Setpoint_S_1 = UI_Setpoint_S_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_1 => Setpoint_S_1 = UI_Setpoint_S_1)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_1 => Setpoint_S_1 = UI_Setpoint_S_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_1_MANUAL_TRIP_S",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_1 & UI_Manual_Trip_S_1 then Trip_S_1\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_1",
        "UI_Manual_Trip_S_1",
        "Trip_S_1"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_1 & UI_Manual_Trip_S_1 => Trip_S_1)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_1 & UI_Manual_Trip_S_1 -> Trip_S_1)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_1 & UI_Manual_Trip_S_1 -> Trip_S_1)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_1 & UI_Manual_Trip_S_1 -> Trip_S_1)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_1 & UI_Manual_Trip_S_1 -> Trip_S_1)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_1 and UI_Manual_Trip_S_1 => Trip_S_1)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_1 & UI_Manual_Trip_S_1 => Trip_S_1)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_BYPASS_T_Display",
    "rationale": "RFP function 13",
    "fulltext": "RTS shall always satisfy UI_Bypass_T_2_Display = Bypass_T_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Bypass_T_2_Display",
        "Bypass_T_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Bypass_T_2_Display = Bypass_T_2)",
      "responseTextRange": [
        17,
        58
      ],
      "ft": "(LAST V <b><i>(UI_Bypass_T_2_Display = Bypass_T_2)</i></b>)",
      "pt": "(H <b><i>(UI_Bypass_T_2_Display = Bypass_T_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Bypass_T_2_Display = Bypass_T_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Bypass_T_2_Display = Bypass_T_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Bypass_T_2_Display = Bypass_T_2)))",
      "diagramVariables": "Response = <b><i>(UI_Bypass_T_2_Display = Bypass_T_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement sets the system value from the UI)\n",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_2\n  then (UI_Bypass_T_2) = Bypass_T_2)\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "UI_Bypass_T_2",
        "Bypass_T_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_2 => ( UI_Bypass_T_2 ) = Bypass_T_2)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_2 -> ( UI_Bypass_T_2 ) = Bypass_T_2)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_2 -> ( UI_Bypass_T_2 ) = Bypass_T_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_2 -> ( UI_Bypass_T_2 ) = Bypass_T_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_2 -> ( UI_Bypass_T_2 ) = Bypass_T_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_2 => ( UI_Bypass_T_2 ) = Bypass_T_2)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_2 => ( UI_Bypass_T_2 ) = Bypass_T_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_2_NO_BYPASS_T",
    "parent_reqid": "INSTRUMENTATION_2_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn on during normal operation)\n",
    "fulltext": "When !UI_Maintenance_2 & !Bypass_T_2 RTS shall, until UI_Maintenance_2 & UI_Bypass_T_2, satisfy\n  !Bypass_T_2\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "Bypass_T_2",
        "UI_Bypass_T_2"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_2 & ! Bypass_T_2)",
      "regular_condition": "(! UI_Maintenance_2 & ! Bypass_T_2)",
      "conditionTextRange": [
        0,
        35
      ],
      "component_name": "RTS",
      "componentTextRange": [
        37,
        39
      ],
      "stop_condition": "(UI_Maintenance_2 & UI_Bypass_T_2)",
      "timingTextRange": [
        46,
        86
      ],
      "post_condition": "(! Bypass_T_2)",
      "responseTextRange": [
        88,
        108
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>))) -> (X ((<b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b> V (<b><i>(! Bypass_T_2)</i></b> | <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>)) | (LAST V <b><i>(! Bypass_T_2)</i></b>))))) & (<b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b> -> ((<b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b> V (<b><i>(! Bypass_T_2)</i></b> | <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>)) | (LAST V <b><i>(! Bypass_T_2)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>)) | (((! <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>) S ((! <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>) & (<b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b> & ((Y (! <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>)) | FTP)))) -> <b><i>(! Bypass_T_2)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>))) -> (X ((<b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b> V (<b><i>(! Bypass_T_2)</i></b> | <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>)) | (LAST V <b><i>(! Bypass_T_2)</i></b>))))) & (<b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b> -> ((<b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b> V (<b><i>(! Bypass_T_2)</i></b> | <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>)) | (LAST V <b><i>(! Bypass_T_2)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>)) | (((! <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>) S ((! <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>) & (<b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b> & ((Y (! <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(! Bypass_T_2)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_2 and not Bypass_T_2))) or ((SI( ((not UI_Maintenance_2 and not Bypass_T_2) and ((pre ( not (not UI_Maintenance_2 and not Bypass_T_2))) or FTP)), ( not (UI_Maintenance_2 and UI_Bypass_T_2)) )) => (not Bypass_T_2))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b>, SC = <b><i>(UI_Maintenance_2 & UI_Bypass_T_2)</i></b>, Response = <b><i>(! Bypass_T_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_2 & ! Bypass_T_2)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_2_BYPASS_T",
    "parent_reqid": "INSTRUMENTATION_2_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn off during normal operation)\n",
    "fulltext": "When !UI_Maintenance_2 & Bypass_T_2 RTS shall, until UI_Maintenance_2 & !UI_Bypass_T_2, satisfy\n  Bypass_T_2\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "Bypass_T_2",
        "UI_Bypass_T_2"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_2 & Bypass_T_2)",
      "regular_condition": "(! UI_Maintenance_2 & Bypass_T_2)",
      "conditionTextRange": [
        0,
        34
      ],
      "component_name": "RTS",
      "componentTextRange": [
        36,
        38
      ],
      "stop_condition": "(UI_Maintenance_2 & ! UI_Bypass_T_2)",
      "timingTextRange": [
        45,
        86
      ],
      "post_condition": "(Bypass_T_2)",
      "responseTextRange": [
        88,
        107
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>))) -> (X ((<b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b> V (<b><i>(Bypass_T_2)</i></b> | <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>)) | (LAST V <b><i>(Bypass_T_2)</i></b>))))) & (<b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b> -> ((<b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b> V (<b><i>(Bypass_T_2)</i></b> | <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>)) | (LAST V <b><i>(Bypass_T_2)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>)) | (((! <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>) S ((! <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>) & (<b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b> & ((Y (! <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>)) | FTP)))) -> <b><i>(Bypass_T_2)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>))) -> (X ((<b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b> V (<b><i>(Bypass_T_2)</i></b> | <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>)) | (LAST V <b><i>(Bypass_T_2)</i></b>))))) & (<b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b> -> ((<b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b> V (<b><i>(Bypass_T_2)</i></b> | <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>)) | (LAST V <b><i>(Bypass_T_2)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>)) | (((! <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>) S ((! <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>) & (<b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b> & ((Y (! <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(Bypass_T_2)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_2 and Bypass_T_2))) or ((SI( ((not UI_Maintenance_2 and Bypass_T_2) and ((pre ( not (not UI_Maintenance_2 and Bypass_T_2))) or FTP)), ( not (UI_Maintenance_2 and not UI_Bypass_T_2)) )) => (Bypass_T_2))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b>, SC = <b><i>(UI_Maintenance_2 & ! UI_Bypass_T_2)</i></b>, Response = <b><i>(Bypass_T_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_2 & Bypass_T_2)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_BYPASS_P_Display",
    "rationale": "RFP function 13",
    "fulltext": "RTS shall always satisfy UI_Bypass_P_2_Display = Bypass_P_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Bypass_P_2_Display",
        "Bypass_P_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Bypass_P_2_Display = Bypass_P_2)",
      "responseTextRange": [
        17,
        58
      ],
      "ft": "(LAST V <b><i>(UI_Bypass_P_2_Display = Bypass_P_2)</i></b>)",
      "pt": "(H <b><i>(UI_Bypass_P_2_Display = Bypass_P_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Bypass_P_2_Display = Bypass_P_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Bypass_P_2_Display = Bypass_P_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Bypass_P_2_Display = Bypass_P_2)))",
      "diagramVariables": "Response = <b><i>(UI_Bypass_P_2_Display = Bypass_P_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement sets the system value from the UI)\n",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_2\n  then (UI_Bypass_P_2) = Bypass_P_2)\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "UI_Bypass_P_2",
        "Bypass_P_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_2 => ( UI_Bypass_P_2 ) = Bypass_P_2)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_2 -> ( UI_Bypass_P_2 ) = Bypass_P_2)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_2 -> ( UI_Bypass_P_2 ) = Bypass_P_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_2 -> ( UI_Bypass_P_2 ) = Bypass_P_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_2 -> ( UI_Bypass_P_2 ) = Bypass_P_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_2 => ( UI_Bypass_P_2 ) = Bypass_P_2)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_2 => ( UI_Bypass_P_2 ) = Bypass_P_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_2_NO_BYPASS_P",
    "parent_reqid": "INSTRUMENTATION_2_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn on during normal operation)\n",
    "fulltext": "When !UI_Maintenance_2 & !Bypass_P_2 RTS shall, until UI_Maintenance_2 & UI_Bypass_P_2, satisfy\n  !Bypass_P_2\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "Bypass_P_2",
        "UI_Bypass_P_2"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_2 & ! Bypass_P_2)",
      "regular_condition": "(! UI_Maintenance_2 & ! Bypass_P_2)",
      "conditionTextRange": [
        0,
        35
      ],
      "component_name": "RTS",
      "componentTextRange": [
        37,
        39
      ],
      "stop_condition": "(UI_Maintenance_2 & UI_Bypass_P_2)",
      "timingTextRange": [
        46,
        86
      ],
      "post_condition": "(! Bypass_P_2)",
      "responseTextRange": [
        88,
        108
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>))) -> (X ((<b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b> V (<b><i>(! Bypass_P_2)</i></b> | <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>)) | (LAST V <b><i>(! Bypass_P_2)</i></b>))))) & (<b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b> -> ((<b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b> V (<b><i>(! Bypass_P_2)</i></b> | <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>)) | (LAST V <b><i>(! Bypass_P_2)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>)) | (((! <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>) S ((! <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>) & (<b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b> & ((Y (! <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>)) | FTP)))) -> <b><i>(! Bypass_P_2)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>))) -> (X ((<b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b> V (<b><i>(! Bypass_P_2)</i></b> | <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>)) | (LAST V <b><i>(! Bypass_P_2)</i></b>))))) & (<b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b> -> ((<b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b> V (<b><i>(! Bypass_P_2)</i></b> | <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>)) | (LAST V <b><i>(! Bypass_P_2)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>)) | (((! <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>) S ((! <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>) & (<b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b> & ((Y (! <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(! Bypass_P_2)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_2 and not Bypass_P_2))) or ((SI( ((not UI_Maintenance_2 and not Bypass_P_2) and ((pre ( not (not UI_Maintenance_2 and not Bypass_P_2))) or FTP)), ( not (UI_Maintenance_2 and UI_Bypass_P_2)) )) => (not Bypass_P_2))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b>, SC = <b><i>(UI_Maintenance_2 & UI_Bypass_P_2)</i></b>, Response = <b><i>(! Bypass_P_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_2 & ! Bypass_P_2)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_2_BYPASS_P",
    "parent_reqid": "INSTRUMENTATION_2_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn off during normal operation)\n",
    "fulltext": "When !UI_Maintenance_2 & Bypass_P_2 RTS shall, until UI_Maintenance_2 & !UI_Bypass_P_2, satisfy\n  Bypass_P_2\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "Bypass_P_2",
        "UI_Bypass_P_2"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_2 & Bypass_P_2)",
      "regular_condition": "(! UI_Maintenance_2 & Bypass_P_2)",
      "conditionTextRange": [
        0,
        34
      ],
      "component_name": "RTS",
      "componentTextRange": [
        36,
        38
      ],
      "stop_condition": "(UI_Maintenance_2 & ! UI_Bypass_P_2)",
      "timingTextRange": [
        45,
        86
      ],
      "post_condition": "(Bypass_P_2)",
      "responseTextRange": [
        88,
        107
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>))) -> (X ((<b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b> V (<b><i>(Bypass_P_2)</i></b> | <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>)) | (LAST V <b><i>(Bypass_P_2)</i></b>))))) & (<b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b> -> ((<b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b> V (<b><i>(Bypass_P_2)</i></b> | <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>)) | (LAST V <b><i>(Bypass_P_2)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>)) | (((! <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>) S ((! <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>) & (<b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b> & ((Y (! <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>)) | FTP)))) -> <b><i>(Bypass_P_2)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>))) -> (X ((<b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b> V (<b><i>(Bypass_P_2)</i></b> | <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>)) | (LAST V <b><i>(Bypass_P_2)</i></b>))))) & (<b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b> -> ((<b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b> V (<b><i>(Bypass_P_2)</i></b> | <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>)) | (LAST V <b><i>(Bypass_P_2)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>)) | (((! <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>) S ((! <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>) & (<b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b> & ((Y (! <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(Bypass_P_2)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_2 and Bypass_P_2))) or ((SI( ((not UI_Maintenance_2 and Bypass_P_2) and ((pre ( not (not UI_Maintenance_2 and Bypass_P_2))) or FTP)), ( not (UI_Maintenance_2 and not UI_Bypass_P_2)) )) => (Bypass_P_2))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b>, SC = <b><i>(UI_Maintenance_2 & ! UI_Bypass_P_2)</i></b>, Response = <b><i>(Bypass_P_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_2 & Bypass_P_2)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_T_2",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy T_2 = UI_T_2_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "T_2",
        "UI_T_2_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(T_2 = UI_T_2_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(T_2 = UI_T_2_Display)</i></b>)",
      "pt": "(H <b><i>(T_2 = UI_T_2_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(T_2 = UI_T_2_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(T_2 = UI_T_2_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((T_2 = UI_T_2_Display)))",
      "diagramVariables": "Response = <b><i>(T_2 = UI_T_2_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_SETPOINT_T",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_2 then Setpoint_T_2 = UI_Setpoint_T_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "Setpoint_T_2",
        "UI_Setpoint_T_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_2 => Setpoint_T_2 = UI_Setpoint_T_2)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_2 -> Setpoint_T_2 = UI_Setpoint_T_2)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_2 -> Setpoint_T_2 = UI_Setpoint_T_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_2 -> Setpoint_T_2 = UI_Setpoint_T_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_2 -> Setpoint_T_2 = UI_Setpoint_T_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_2 => Setpoint_T_2 = UI_Setpoint_T_2)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_2 => Setpoint_T_2 = UI_Setpoint_T_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_MANUAL_TRIP_T",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_2 & UI_Manual_Trip_T_2 then Trip_T_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "UI_Manual_Trip_T_2",
        "Trip_T_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_2 & UI_Manual_Trip_T_2 => Trip_T_2)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_2 & UI_Manual_Trip_T_2 -> Trip_T_2)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_2 & UI_Manual_Trip_T_2 -> Trip_T_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_2 & UI_Manual_Trip_T_2 -> Trip_T_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_2 & UI_Manual_Trip_T_2 -> Trip_T_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_2 and UI_Manual_Trip_T_2 => Trip_T_2)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_2 & UI_Manual_Trip_T_2 => Trip_T_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_P_2",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy P_2 = UI_P_2_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "P_2",
        "UI_P_2_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(P_2 = UI_P_2_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(P_2 = UI_P_2_Display)</i></b>)",
      "pt": "(H <b><i>(P_2 = UI_P_2_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(P_2 = UI_P_2_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(P_2 = UI_P_2_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((P_2 = UI_P_2_Display)))",
      "diagramVariables": "Response = <b><i>(P_2 = UI_P_2_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_SETPOINT_P",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_2 then Setpoint_P_2 = UI_Setpoint_P_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "Setpoint_P_2",
        "UI_Setpoint_P_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_2 => Setpoint_P_2 = UI_Setpoint_P_2)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_2 -> Setpoint_P_2 = UI_Setpoint_P_2)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_2 -> Setpoint_P_2 = UI_Setpoint_P_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_2 -> Setpoint_P_2 = UI_Setpoint_P_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_2 -> Setpoint_P_2 = UI_Setpoint_P_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_2 => Setpoint_P_2 = UI_Setpoint_P_2)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_2 => Setpoint_P_2 = UI_Setpoint_P_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_MANUAL_TRIP_P",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_2 & UI_Manual_Trip_P_2 then Trip_P_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "UI_Manual_Trip_P_2",
        "Trip_P_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_2 & UI_Manual_Trip_P_2 => Trip_P_2)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_2 & UI_Manual_Trip_P_2 -> Trip_P_2)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_2 & UI_Manual_Trip_P_2 -> Trip_P_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_2 & UI_Manual_Trip_P_2 -> Trip_P_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_2 & UI_Manual_Trip_P_2 -> Trip_P_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_2 and UI_Manual_Trip_P_2 => Trip_P_2)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_2 & UI_Manual_Trip_P_2 => Trip_P_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_S_2",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy S_2 = UI_S_2_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "S_2",
        "UI_S_2_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(S_2 = UI_S_2_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(S_2 = UI_S_2_Display)</i></b>)",
      "pt": "(H <b><i>(S_2 = UI_S_2_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(S_2 = UI_S_2_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(S_2 = UI_S_2_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((S_2 = UI_S_2_Display)))",
      "diagramVariables": "Response = <b><i>(S_2 = UI_S_2_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_SETPOINT_S",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_2 then Setpoint_S_2 = UI_Setpoint_S_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "Setpoint_S_2",
        "UI_Setpoint_S_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_2 => Setpoint_S_2 = UI_Setpoint_S_2)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_2 -> Setpoint_S_2 = UI_Setpoint_S_2)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_2 -> Setpoint_S_2 = UI_Setpoint_S_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_2 -> Setpoint_S_2 = UI_Setpoint_S_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_2 -> Setpoint_S_2 = UI_Setpoint_S_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_2 => Setpoint_S_2 = UI_Setpoint_S_2)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_2 => Setpoint_S_2 = UI_Setpoint_S_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_2_MANUAL_TRIP_S",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_2 & UI_Manual_Trip_S_2 then Trip_S_2\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_2",
        "UI_Manual_Trip_S_2",
        "Trip_S_2"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_2 & UI_Manual_Trip_S_2 => Trip_S_2)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_2 & UI_Manual_Trip_S_2 -> Trip_S_2)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_2 & UI_Manual_Trip_S_2 -> Trip_S_2)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_2 & UI_Manual_Trip_S_2 -> Trip_S_2)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_2 & UI_Manual_Trip_S_2 -> Trip_S_2)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_2 and UI_Manual_Trip_S_2 => Trip_S_2)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_2 & UI_Manual_Trip_S_2 => Trip_S_2)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_BYPASS_T_Display",
    "rationale": "RFP function 13",
    "fulltext": "RTS shall always satisfy UI_Bypass_T_3_Display = Bypass_T_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Bypass_T_3_Display",
        "Bypass_T_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Bypass_T_3_Display = Bypass_T_3)",
      "responseTextRange": [
        17,
        58
      ],
      "ft": "(LAST V <b><i>(UI_Bypass_T_3_Display = Bypass_T_3)</i></b>)",
      "pt": "(H <b><i>(UI_Bypass_T_3_Display = Bypass_T_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Bypass_T_3_Display = Bypass_T_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Bypass_T_3_Display = Bypass_T_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Bypass_T_3_Display = Bypass_T_3)))",
      "diagramVariables": "Response = <b><i>(UI_Bypass_T_3_Display = Bypass_T_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement sets the system value from the UI)\n",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_3\n  then (UI_Bypass_T_3) = Bypass_T_3)\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "UI_Bypass_T_3",
        "Bypass_T_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_3 => ( UI_Bypass_T_3 ) = Bypass_T_3)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_3 -> ( UI_Bypass_T_3 ) = Bypass_T_3)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_3 -> ( UI_Bypass_T_3 ) = Bypass_T_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_3 -> ( UI_Bypass_T_3 ) = Bypass_T_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_3 -> ( UI_Bypass_T_3 ) = Bypass_T_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_3 => ( UI_Bypass_T_3 ) = Bypass_T_3)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_3 => ( UI_Bypass_T_3 ) = Bypass_T_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_3_NO_BYPASS_T",
    "parent_reqid": "INSTRUMENTATION_3_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn on during normal operation)\n",
    "fulltext": "When !UI_Maintenance_3 & !Bypass_T_3 RTS shall, until UI_Maintenance_3 & UI_Bypass_T_3, satisfy\n  !Bypass_T_3\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "Bypass_T_3",
        "UI_Bypass_T_3"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_3 & ! Bypass_T_3)",
      "regular_condition": "(! UI_Maintenance_3 & ! Bypass_T_3)",
      "conditionTextRange": [
        0,
        35
      ],
      "component_name": "RTS",
      "componentTextRange": [
        37,
        39
      ],
      "stop_condition": "(UI_Maintenance_3 & UI_Bypass_T_3)",
      "timingTextRange": [
        46,
        86
      ],
      "post_condition": "(! Bypass_T_3)",
      "responseTextRange": [
        88,
        108
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>))) -> (X ((<b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b> V (<b><i>(! Bypass_T_3)</i></b> | <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>)) | (LAST V <b><i>(! Bypass_T_3)</i></b>))))) & (<b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b> -> ((<b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b> V (<b><i>(! Bypass_T_3)</i></b> | <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>)) | (LAST V <b><i>(! Bypass_T_3)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>)) | (((! <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>) S ((! <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>) & (<b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b> & ((Y (! <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>)) | FTP)))) -> <b><i>(! Bypass_T_3)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>))) -> (X ((<b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b> V (<b><i>(! Bypass_T_3)</i></b> | <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>)) | (LAST V <b><i>(! Bypass_T_3)</i></b>))))) & (<b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b> -> ((<b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b> V (<b><i>(! Bypass_T_3)</i></b> | <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>)) | (LAST V <b><i>(! Bypass_T_3)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>)) | (((! <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>) S ((! <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>) & (<b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b> & ((Y (! <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(! Bypass_T_3)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_3 and not Bypass_T_3))) or ((SI( ((not UI_Maintenance_3 and not Bypass_T_3) and ((pre ( not (not UI_Maintenance_3 and not Bypass_T_3))) or FTP)), ( not (UI_Maintenance_3 and UI_Bypass_T_3)) )) => (not Bypass_T_3))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b>, SC = <b><i>(UI_Maintenance_3 & UI_Bypass_T_3)</i></b>, Response = <b><i>(! Bypass_T_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_3 & ! Bypass_T_3)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_3_BYPASS_T",
    "parent_reqid": "INSTRUMENTATION_3_BYPASS_T",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn off during normal operation)\n",
    "fulltext": "When !UI_Maintenance_3 & Bypass_T_3 RTS shall, until UI_Maintenance_3 & !UI_Bypass_T_3, satisfy\n  Bypass_T_3\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "Bypass_T_3",
        "UI_Bypass_T_3"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_3 & Bypass_T_3)",
      "regular_condition": "(! UI_Maintenance_3 & Bypass_T_3)",
      "conditionTextRange": [
        0,
        34
      ],
      "component_name": "RTS",
      "componentTextRange": [
        36,
        38
      ],
      "stop_condition": "(UI_Maintenance_3 & ! UI_Bypass_T_3)",
      "timingTextRange": [
        45,
        86
      ],
      "post_condition": "(Bypass_T_3)",
      "responseTextRange": [
        88,
        107
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>))) -> (X ((<b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b> V (<b><i>(Bypass_T_3)</i></b> | <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>)) | (LAST V <b><i>(Bypass_T_3)</i></b>))))) & (<b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b> -> ((<b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b> V (<b><i>(Bypass_T_3)</i></b> | <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>)) | (LAST V <b><i>(Bypass_T_3)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>)) | (((! <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>) S ((! <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>) & (<b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b> & ((Y (! <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>)) | FTP)))) -> <b><i>(Bypass_T_3)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>))) -> (X ((<b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b> V (<b><i>(Bypass_T_3)</i></b> | <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>)) | (LAST V <b><i>(Bypass_T_3)</i></b>))))) & (<b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b> -> ((<b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b> V (<b><i>(Bypass_T_3)</i></b> | <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>)) | (LAST V <b><i>(Bypass_T_3)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>)) | (((! <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>) S ((! <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>) & (<b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b> & ((Y (! <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(Bypass_T_3)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_3 and Bypass_T_3))) or ((SI( ((not UI_Maintenance_3 and Bypass_T_3) and ((pre ( not (not UI_Maintenance_3 and Bypass_T_3))) or FTP)), ( not (UI_Maintenance_3 and not UI_Bypass_T_3)) )) => (Bypass_T_3))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b>, SC = <b><i>(UI_Maintenance_3 & ! UI_Bypass_T_3)</i></b>, Response = <b><i>(Bypass_T_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_3 & Bypass_T_3)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_BYPASS_P_Display",
    "rationale": "RFP function 13",
    "fulltext": "RTS shall always satisfy UI_Bypass_P_3_Display = Bypass_P_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Bypass_P_3_Display",
        "Bypass_P_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Bypass_P_3_Display = Bypass_P_3)",
      "responseTextRange": [
        17,
        58
      ],
      "ft": "(LAST V <b><i>(UI_Bypass_P_3_Display = Bypass_P_3)</i></b>)",
      "pt": "(H <b><i>(UI_Bypass_P_3_Display = Bypass_P_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Bypass_P_3_Display = Bypass_P_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Bypass_P_3_Display = Bypass_P_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Bypass_P_3_Display = Bypass_P_3)))",
      "diagramVariables": "Response = <b><i>(UI_Bypass_P_3_Display = Bypass_P_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement sets the system value from the UI)\n",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_3\n  then (UI_Bypass_P_3) = Bypass_P_3)\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "UI_Bypass_P_3",
        "Bypass_P_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_3 => ( UI_Bypass_P_3 ) = Bypass_P_3)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_3 -> ( UI_Bypass_P_3 ) = Bypass_P_3)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_3 -> ( UI_Bypass_P_3 ) = Bypass_P_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_3 -> ( UI_Bypass_P_3 ) = Bypass_P_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_3 -> ( UI_Bypass_P_3 ) = Bypass_P_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_3 => ( UI_Bypass_P_3 ) = Bypass_P_3)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_3 => ( UI_Bypass_P_3 ) = Bypass_P_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_3_NO_BYPASS_P",
    "parent_reqid": "INSTRUMENTATION_3_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn on during normal operation)\n",
    "fulltext": "When !UI_Maintenance_3 & !Bypass_P_3 RTS shall, until UI_Maintenance_3 & UI_Bypass_P_3, satisfy\n  !Bypass_P_3\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "Bypass_P_3",
        "UI_Bypass_P_3"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_3 & ! Bypass_P_3)",
      "regular_condition": "(! UI_Maintenance_3 & ! Bypass_P_3)",
      "conditionTextRange": [
        0,
        35
      ],
      "component_name": "RTS",
      "componentTextRange": [
        37,
        39
      ],
      "stop_condition": "(UI_Maintenance_3 & UI_Bypass_P_3)",
      "timingTextRange": [
        46,
        86
      ],
      "post_condition": "(! Bypass_P_3)",
      "responseTextRange": [
        88,
        108
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>))) -> (X ((<b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b> V (<b><i>(! Bypass_P_3)</i></b> | <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>)) | (LAST V <b><i>(! Bypass_P_3)</i></b>))))) & (<b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b> -> ((<b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b> V (<b><i>(! Bypass_P_3)</i></b> | <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>)) | (LAST V <b><i>(! Bypass_P_3)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>)) | (((! <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>) S ((! <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>) & (<b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b> & ((Y (! <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>)) | FTP)))) -> <b><i>(! Bypass_P_3)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>))) -> (X ((<b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b> V (<b><i>(! Bypass_P_3)</i></b> | <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>)) | (LAST V <b><i>(! Bypass_P_3)</i></b>))))) & (<b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b> -> ((<b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b> V (<b><i>(! Bypass_P_3)</i></b> | <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>)) | (LAST V <b><i>(! Bypass_P_3)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>)) | (((! <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>) S ((! <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>) & (<b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b> & ((Y (! <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(! Bypass_P_3)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_3 and not Bypass_P_3))) or ((SI( ((not UI_Maintenance_3 and not Bypass_P_3) and ((pre ( not (not UI_Maintenance_3 and not Bypass_P_3))) or FTP)), ( not (UI_Maintenance_3 and UI_Bypass_P_3)) )) => (not Bypass_P_3))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b>, SC = <b><i>(UI_Maintenance_3 & UI_Bypass_P_3)</i></b>, Response = <b><i>(! Bypass_P_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_3 & ! Bypass_P_3)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "CONST_INSTRUMENTATION_3_BYPASS_P",
    "parent_reqid": "INSTRUMENTATION_3_BYPASS_P",
    "rationale": "RFP function 9: configure in maintenance mode to bypass an instrument channel (this requirement does not allow bypass to turn off during normal operation)\n",
    "fulltext": "When !UI_Maintenance_3 & Bypass_P_3 RTS shall, until UI_Maintenance_3 & !UI_Bypass_P_3, satisfy\n  Bypass_P_3\n",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "regular",
      "timing": "until",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "Bypass_P_3",
        "UI_Bypass_P_3"
      ],
      "qualifier_word": "when",
      "pre_condition": "(! UI_Maintenance_3 & Bypass_P_3)",
      "regular_condition": "(! UI_Maintenance_3 & Bypass_P_3)",
      "conditionTextRange": [
        0,
        34
      ],
      "component_name": "RTS",
      "componentTextRange": [
        36,
        38
      ],
      "stop_condition": "(UI_Maintenance_3 & ! UI_Bypass_P_3)",
      "timingTextRange": [
        45,
        86
      ],
      "post_condition": "(Bypass_P_3)",
      "responseTextRange": [
        88,
        107
      ],
      "ft": "((LAST V (((! <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>))) -> (X ((<b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b> V (<b><i>(Bypass_P_3)</i></b> | <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>)) | (LAST V <b><i>(Bypass_P_3)</i></b>))))) & (<b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b> -> ((<b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b> V (<b><i>(Bypass_P_3)</i></b> | <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>)) | (LAST V <b><i>(Bypass_P_3)</i></b>))))",
      "pt": "(H ((H (! <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>)) | (((! <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>) S ((! <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>) & (<b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b> & ((Y (! <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>)) | FTP)))) -> <b><i>(Bypass_P_3)</i></b>)))",
      "ftExpanded": "((LAST V (((! <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>) & ((! LAST) & (X <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>))) -> (X ((<b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b> V (<b><i>(Bypass_P_3)</i></b> | <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>)) | (LAST V <b><i>(Bypass_P_3)</i></b>))))) & (<b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b> -> ((<b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b> V (<b><i>(Bypass_P_3)</i></b> | <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>)) | (LAST V <b><i>(Bypass_P_3)</i></b>))))",
      "ptExpanded": "(H ((H (! <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>)) | (((! <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>) S ((! <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>) & (<b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b> & ((Y (! <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>)) | (! (Y TRUE)))))) -> <b><i>(Bypass_P_3)</i></b>)))",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((H( not (not UI_Maintenance_3 and Bypass_P_3))) or ((SI( ((not UI_Maintenance_3 and Bypass_P_3) and ((pre ( not (not UI_Maintenance_3 and Bypass_P_3))) or FTP)), ( not (UI_Maintenance_3 and not UI_Bypass_P_3)) )) => (Bypass_P_3))))",
      "diagramVariables": "TC = <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b>, SC = <b><i>(UI_Maintenance_3 & ! UI_Bypass_P_3)</i></b>, Response = <b><i>(Bypass_P_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval if <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b> is true and any point in the interval where <b><i>(! UI_Maintenance_3 & Bypass_P_3)</i></b> becomes true (from false).\nREQUIRES: for every trigger, RES must remain true until (but not necessarily including) the point where the stop condition holds, or to the end of the interval. If the stop condition never occurs, RES must hold until the end of the scope, or forever.  If the stop condition holds at the trigger, the requirement is satisfied.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_regular_until_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_T_3",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy T_3 = UI_T_3_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "T_3",
        "UI_T_3_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(T_3 = UI_T_3_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(T_3 = UI_T_3_Display)</i></b>)",
      "pt": "(H <b><i>(T_3 = UI_T_3_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(T_3 = UI_T_3_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(T_3 = UI_T_3_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((T_3 = UI_T_3_Display)))",
      "diagramVariables": "Response = <b><i>(T_3 = UI_T_3_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_SETPOINT_T",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_3 then Setpoint_T_3 = UI_Setpoint_T_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "Setpoint_T_3",
        "UI_Setpoint_T_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_3 => Setpoint_T_3 = UI_Setpoint_T_3)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_3 -> Setpoint_T_3 = UI_Setpoint_T_3)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_3 -> Setpoint_T_3 = UI_Setpoint_T_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_3 -> Setpoint_T_3 = UI_Setpoint_T_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_3 -> Setpoint_T_3 = UI_Setpoint_T_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_3 => Setpoint_T_3 = UI_Setpoint_T_3)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_3 => Setpoint_T_3 = UI_Setpoint_T_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_MANUAL_TRIP_T",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_3 & UI_Manual_Trip_T_3 then Trip_T_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "UI_Manual_Trip_T_3",
        "Trip_T_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_3 & UI_Manual_Trip_T_3 => Trip_T_3)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_3 & UI_Manual_Trip_T_3 -> Trip_T_3)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_3 & UI_Manual_Trip_T_3 -> Trip_T_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_3 & UI_Manual_Trip_T_3 -> Trip_T_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_3 & UI_Manual_Trip_T_3 -> Trip_T_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_3 and UI_Manual_Trip_T_3 => Trip_T_3)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_3 & UI_Manual_Trip_T_3 => Trip_T_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_P_3",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy P_3 = UI_P_3_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "P_3",
        "UI_P_3_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(P_3 = UI_P_3_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(P_3 = UI_P_3_Display)</i></b>)",
      "pt": "(H <b><i>(P_3 = UI_P_3_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(P_3 = UI_P_3_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(P_3 = UI_P_3_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((P_3 = UI_P_3_Display)))",
      "diagramVariables": "Response = <b><i>(P_3 = UI_P_3_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_SETPOINT_P",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_3 then Setpoint_P_3 = UI_Setpoint_P_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "Setpoint_P_3",
        "UI_Setpoint_P_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_3 => Setpoint_P_3 = UI_Setpoint_P_3)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_3 -> Setpoint_P_3 = UI_Setpoint_P_3)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_3 -> Setpoint_P_3 = UI_Setpoint_P_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_3 -> Setpoint_P_3 = UI_Setpoint_P_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_3 -> Setpoint_P_3 = UI_Setpoint_P_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_3 => Setpoint_P_3 = UI_Setpoint_P_3)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_3 => Setpoint_P_3 = UI_Setpoint_P_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_MANUAL_TRIP_P",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_3 & UI_Manual_Trip_P_3 then Trip_P_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "UI_Manual_Trip_P_3",
        "Trip_P_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_3 & UI_Manual_Trip_P_3 => Trip_P_3)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_3 & UI_Manual_Trip_P_3 -> Trip_P_3)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_3 & UI_Manual_Trip_P_3 -> Trip_P_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_3 & UI_Manual_Trip_P_3 -> Trip_P_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_3 & UI_Manual_Trip_P_3 -> Trip_P_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_3 and UI_Manual_Trip_P_3 => Trip_P_3)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_3 & UI_Manual_Trip_P_3 => Trip_P_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_UI_S_3",
    "rationale": "RFP function 11",
    "fulltext": "RTS shall always satisfy S_3 = UI_S_3_Display",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "S_3",
        "UI_S_3_Display"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(S_3 = UI_S_3_Display)",
      "responseTextRange": [
        17,
        44
      ],
      "ft": "(LAST V <b><i>(S_3 = UI_S_3_Display)</i></b>)",
      "pt": "(H <b><i>(S_3 = UI_S_3_Display)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(S_3 = UI_S_3_Display)</i></b>)",
      "ptExpanded": "(H <b><i>(S_3 = UI_S_3_Display)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((S_3 = UI_S_3_Display)))",
      "diagramVariables": "Response = <b><i>(S_3 = UI_S_3_Display)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_SETPOINT_S",
    "rationale": "RFP function 8",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_3 then Setpoint_S_3 = UI_Setpoint_S_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "Setpoint_S_3",
        "UI_Setpoint_S_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_3 => Setpoint_S_3 = UI_Setpoint_S_3)",
      "responseTextRange": [
        17,
        81
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_3 -> Setpoint_S_3 = UI_Setpoint_S_3)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_3 -> Setpoint_S_3 = UI_Setpoint_S_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_3 -> Setpoint_S_3 = UI_Setpoint_S_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_3 -> Setpoint_S_3 = UI_Setpoint_S_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_3 => Setpoint_S_3 = UI_Setpoint_S_3)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_3 => Setpoint_S_3 = UI_Setpoint_S_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  },
  {
    "reqid": "INSTRUMENTATION_3_MANUAL_TRIP_S",
    "rationale": "RFP function 10",
    "fulltext": "RTS shall always satisfy\n  if UI_Maintenance_3 & UI_Manual_Trip_S_3 then Trip_S_3\n",
    "parent_reqid": "",
    "project": "HARDENS_RTS",
    "semantics": {
      "type": "nasa",
      "scope": {
        "type": "null"
      },
      "condition": "null",
      "timing": "always",
      "response": "satisfaction",
      "variables": [
        "UI_Maintenance_3",
        "UI_Manual_Trip_S_3",
        "Trip_S_3"
      ],
      "component_name": "RTS",
      "componentTextRange": [
        0,
        2
      ],
      "timingTextRange": [
        10,
        15
      ],
      "post_condition": "(UI_Maintenance_3 & UI_Manual_Trip_S_3 => Trip_S_3)",
      "responseTextRange": [
        17,
        80
      ],
      "ft": "(LAST V <b><i>(UI_Maintenance_3 & UI_Manual_Trip_S_3 -> Trip_S_3)</i></b>)",
      "pt": "(H <b><i>(UI_Maintenance_3 & UI_Manual_Trip_S_3 -> Trip_S_3)</i></b>)",
      "ftExpanded": "(LAST V <b><i>(UI_Maintenance_3 & UI_Manual_Trip_S_3 -> Trip_S_3)</i></b>)",
      "ptExpanded": "(H <b><i>(UI_Maintenance_3 & UI_Manual_Trip_S_3 -> Trip_S_3)</i></b>)",
      "component": "<b><i>RTS</i></b>",
      "CoCoSpecCode": "(H((UI_Maintenance_3 and UI_Manual_Trip_S_3 => Trip_S_3)))",
      "diagramVariables": "Response = <b><i>(UI_Maintenance_3 & UI_Manual_Trip_S_3 => Trip_S_3)</i></b>.",
      "description": "ENFORCED: in the interval defined by the entire execution.\nTRIGGER: first point in the interval.\nREQUIRES: for every trigger, RES must hold at all time points between (and including) the trigger and the end of the interval.",
      "diagram": "_media/user-interface/examples/svgDiagrams/null_null_always_satisfaction.svg"
    }
  }
]