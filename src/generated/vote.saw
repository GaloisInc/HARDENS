print "Loading reference term";
vote_reference <- cryptol_load "../../models/RTS/Actuation.cry";

print "Loading generated term";
generated      <- llvm_load_module "vote.bc";

// The byte types below (llvm_int 8; [8]) are due to
// https://github.com/GaloisInc/crucible/issues/934
let spec = do {
  // inp: [4][3]
  inp   <- llvm_fresh_var "inp" (llvm_array 4 (llvm_int 8));
  p_inp <- llvm_alloc (llvm_array 4 (llvm_int 8));
  llvm_points_to p_inp (llvm_term inp);

  llvm_execute_func [p_inp];

  // vote_step : [4][3] -> [2]
  // Cryptol is big endian
  // But we're sticking with the standard bit 0 is the LSB in the C code
  llvm_return (llvm_term {{ (zero # reverse (vote_reference::Voting_Step (reverse (map reverse (map drop inp))))) : [8] }});
};

llvm_verify generated "Voting_Step" [] false spec z3;
