//
// Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
//
// On Tue Dec  7 20:03:42 EST 2021
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTop(CLK,
	     RST_N);
  input  CLK;
  input  RST_N;

  // ports of submodule nerv_soc
  wire [31 : 0] nerv_soc$leds;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_leds, WILL_FIRE_RL_rl_leds;

  // submodule nerv_soc
  mkNervSoC nerv_soc(.CLK(CLK),
		     .RST_N(RST_N),
		     .leds(nerv_soc$leds),
		     .RDY_leds());

  // rule RL_rl_leds
  assign CAN_FIRE_RL_rl_leds = 1'd1 ;
  assign WILL_FIRE_RL_rl_leds = 1'd1 ;

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    $display("LEDs: %0b", nerv_soc$leds);
  end
  // synopsys translate_on
endmodule  // mkTop

